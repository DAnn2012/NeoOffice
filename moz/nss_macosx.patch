--- misc/build/nss-3.16/nspr/config/rules.mk	2009-12-09 22:24:37.000000000 +0100
+++ misc/build/nss-3.16/nspr/config/rules.mk	2010-06-11 16:35:54.946870871 +0200
@@ -345,7 +345,12 @@
 ifdef NS_USE_GCC
 	$(RC) $(RCFLAGS) $(filter-out -U%,$(DEFINES)) $(INCLUDES:-I%=--include-dir %) -o $@ $<
 else
-	$(RC) $(RCFLAGS) $(filter-out -U%,$(DEFINES)) $(INCLUDES) -Fo$@ $<
+        #We remove stl from the paths to avoid that rc.exe finds the stlport of
+        #OOo. stlport includes the system stl which will fail. By removing it,
+        #rc will use the stl from the system if the path is in the INCLUDE
+        #variable.
+	INCLUDE="$(subst /stl,,$(INCLUDE))" $(RC) $(RCFLAGS) $(filter-out -U%,$(DEFINES)) $(INCLUDES) -Fo$@ $<
+
 endif # GCC
 	@echo $(RES) finished
 endif
--- misc/build/nss-3.16/nss/coreconf/Darwin.mk	2014-04-25 19:12:44.000000000 -0700
+++ misc/build/nss-3.16/nss/coreconf/Darwin.mk	2014-04-25 19:14:35.000000000 -0700
@@ -7,8 +7,11 @@
 
 DEFAULT_COMPILER = gcc
 
-CC		= gcc
-CCC		= g++
+# CC is taken from environment automatically.
+#CC		= gcc
+# Use CCC from environment.
+#CCC		= g++
+CCC		= $(CXX)
 RANLIB		= ranlib
 
 ifndef CPU_ARCH
--- misc/build/nss-3.16/nss/coreconf/arch.mk	2009-06-05 04:14:49.000000000 +0200
+++ misc/build/nss-3.16/nss/coreconf/arch.mk	2010-06-11 16:35:54.990913282 +0200
@@ -324,7 +324,12 @@
 # IMPL_STRATEGY may be defined too.
 #
 
-OBJDIR_NAME = $(OS_TARGET)$(OS_RELEASE)$(CPU_TAG)$(COMPILER_TAG)$(LIBC_TAG)$(IMPL_STRATEGY)$(OBJDIR_TAG).OBJ
+# OBJDIR_NAME is used to build the directory containing the built objects, for 
+# example mozilla/dist/Linux2.6_x86_glibc_PTH_DBG.OBJ
+# We need to deliver the contents of that folder into the solver. To make that easier
+# in the makefile we rename this directory to "out". 
+#OBJDIR_NAME = $(OS_TARGET)$(OS_RELEASE)$(CPU_TAG)$(COMPILER_TAG)$(LIBC_TAG)$(IMPL_STRATEGY)$(OBJDIR_TAG).OBJ
+OBJDIR_NAME = out
 
 ifeq (,$(filter-out WIN%,$(OS_TARGET)))
 ifndef BUILD_OPT
--- misc/build/nss-3.16/nss/coreconf/rules.mk	2009-12-08 02:33:36.000000000 +0100
+++ misc/build/nss-3.16/nss/coreconf/rules.mk	2010-06-11 16:35:54.996448704 +0200
@@ -355,7 +355,12 @@
 ifdef NS_USE_GCC
 	$(RC) $(filter-out -U%,$(DEFINES)) $(INCLUDES:-I%=--include-dir %) -o $@ $<
 else
-	$(RC) $(filter-out -U%,$(DEFINES)) $(INCLUDES) -Fo$@ $<
+        #We remove stl from the paths to avoid that rc.exe finds the stlport of
+        #OOo. stlport includes the system stl which will fail. By removing it,
+        #rc will use the stl from the system if the path is in the INCLUDE
+        #variable.
+	INCLUDE="$(subst /stl,,$(INCLUDE))" $(RC) $(filter-out -U%,$(DEFINES)) $(INCLUDES) -Fo$@ $<
+
 endif
 	@echo $(RES) finished
 endif
--- misc/build/nss-3.16/nss/lib/freebl/unix_rand.c	2014-03-14 13:31:59.000000000 -0700
+++ misc/build/nss-3.16/nss/lib/freebl/unix_rand.c	2014-04-29 18:15:11.000000000 -0700
@@ -845,8 +845,15 @@
     static const char * const files[] = {
 	"/etc/passwd",
 	"/etc/utmp",
+#ifdef DARWIN
+	/*
+	 * Eliminate sandbox deny file-read-data messages by excluding /tmp and
+	 * /var/tmp
+	 */
+#else
 	"/tmp",
 	"/var/tmp",
+#endif
 	"/usr/tmp",
 	0
     };
