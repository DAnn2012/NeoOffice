--- source/core/drawdoc.cxx	2015-11-25 04:55:38.000000000 -0800
+++ source/core/drawdoc.cxx	2016-12-08 17:07:22.000000000 -0800
@@ -691,6 +691,12 @@
     {
         pDocLockedInsertingLinks = this; // lock inserting links. only links in this document should by resolved
 
+        if (mpDocSh)
+        {
+            comphelper::EmbeddedObjectContainer& rEmbeddedObjectContainer = mpDocSh->getEmbeddedObjectContainer();
+            rEmbeddedObjectContainer.setUserAllowsLinkUpdate(true);
+        }
+
         pLinkManager->UpdateAllLinks();  // query box: update all links?
 
         if( pDocLockedInsertingLinks == this )
--- source/ui/docshell/docshel4.cxx	2015-11-25 04:55:38.000000000 -0800
+++ source/ui/docshell/docshel4.cxx	2016-12-08 17:08:54.000000000 -0800
@@ -288,8 +288,11 @@
     }
 
     bRet = SfxObjectShell::Load( rMedium );
-    if( bRet )
+    if (bRet)
     {
+        comphelper::EmbeddedObjectContainer& rEmbeddedObjectContainer = getEmbeddedObjectContainer();
+        rEmbeddedObjectContainer.setUserAllowsLinkUpdate(false);
+
         bRet = SdXMLFilter( rMedium, *this, true, SDXMLMODE_Normal, SotStorage::GetVersion( rMedium.GetStorage() ) ).Import( nError );
     }
 
--- source/ui/remotecontrol/BluetoothServer.cxx	2015-11-25 07:55:38.000000000 -0500
+++ source/ui/remotecontrol/BluetoothServer.cxx	2020-12-21 10:55:07.000000000 -0500
@@ -53,6 +53,10 @@
   #include <postmac.h>
   #import "OSXBluetooth.h"
   #include "OSXBluetoothWrapper.hxx"
+
+  #include <dlfcn.h>
+
+  typedef IOReturn IOBluetoothAddServiceDict_Type( CFDictionaryRef aServiceDict, IOBluetoothSDPServiceRecordRef *pOutServiceRecord );
 #endif
 
 #ifdef __MINGW32__
@@ -1491,7 +1495,15 @@
 
     // Create service
     IOBluetoothSDPServiceRecordRef serviceRecordRef;
-    IOReturn rc = IOBluetoothAddServiceDict((CFDictionaryRef) dict, &serviceRecordRef);
+    IOReturn rc = kIOReturnError;
+    void *pLib = dlopen(NULL, RTLD_LAZY | RTLD_LOCAL);
+    if (pLib)
+    {
+        IOBluetoothAddServiceDict_Type *pIOBluetoothAddServiceDict = (IOBluetoothAddServiceDict_Type *)dlsym(pLib, "IOBluetoothAddServiceDict");
+        if (pIOBluetoothAddServiceDict)
+            rc = pIOBluetoothAddServiceDict((CFDictionaryRef) dict, &serviceRecordRef);
+        dlclose(pLib);
+    }
 
     SAL_INFO("sdremote.bluetooth", "IOBluetoothAddServiceDict returned " << rc);
 
