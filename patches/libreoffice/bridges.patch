--- inc/vtablefactory.hxx.bak	2020-12-17 16:59:38.000000000 -0500
+++ inc/vtablefactory.hxx	2020-12-29 07:37:42.000000000 -0500
@@ -208,7 +208,7 @@
     static void flushCode(
         unsigned char const * begin, unsigned char const * end);
 
-    typedef std::unordered_map< OUString, Vtables > Map;
+    typedef std::unordered_map< OUString, Vtables, OUStringHash > Map;
 
     osl::Mutex m_mutex;
     Map m_map;
--- source/cpp_uno/gcc3_macosx_x86-64/except.cxx.bak	2020-12-17 16:59:38.000000000 -0500
+++ source/cpp_uno/gcc3_macosx_x86-64/except.cxx	2020-12-29 07:39:52.000000000 -0500
@@ -145,7 +145,7 @@
 
 class RTTI
 {
-    typedef std::unordered_map< OUString, std::type_info * > t_rtti_map;
+    typedef std::unordered_map< OUString, std::type_info *, OUStringHash > t_rtti_map;
 
     Mutex m_mutex;
     t_rtti_map m_rttis;
--- source/cpp_uno/shared/vtablefactory.cxx.bak	2020-12-17 16:59:38.000000000 -0500
+++ source/cpp_uno/shared/vtablefactory.cxx	2020-12-29 07:39:07.000000000 -0500
@@ -174,7 +174,7 @@
     sal_Int32 calculate(
         typelib_InterfaceTypeDescription * type, sal_Int32 offset);
 
-    std::unordered_map< OUString, sal_Int32 > m_map;
+    std::unordered_map< OUString, sal_Int32, OUStringHash > m_map;
 };
 
 sal_Int32 VtableFactory::BaseOffset::calculate(
--- source/cpp_uno/gcc3_linux_aarch64/abi.cxx.bak	2020-12-17 16:59:38.000000000 -0500
+++ source/cpp_uno/gcc3_linux_aarch64/abi.cxx	2020-12-29 07:40:25.000000000 -0500
@@ -81,7 +81,7 @@
     std::type_info * getRtti(typelib_TypeDescription const & type);
 
 private:
-    typedef std::unordered_map<OUString, std::type_info *> Map;
+    typedef std::unordered_map<OUString, std::type_info *, OUStringHash > Map;
 
     void * app_;
 
