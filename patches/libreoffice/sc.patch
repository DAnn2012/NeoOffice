--- inc/documentlinkmgr.hxx	2015-11-25 04:55:38.000000000 -0800
+++ inc/documentlinkmgr.hxx	2016-12-08 13:45:10.000000000 -0800
@@ -53,14 +53,17 @@
     bool idleCheckLinks();
 
     bool hasDdeLinks() const;
-
-    bool updateDdeLinks( vcl::Window* pWin );
+    bool hasDdeOrOleLinks() const;
+ 
+    bool updateDdeOrOleLinks(vcl::Window* pWin);
 
     bool updateDdeLink( const OUString& rAppl, const OUString& rTopic, const OUString& rItem );
 
     size_t getDdeLinkCount() const;
 
     void disconnectDdeLinks();
+private:
+    bool hasDdeOrOleLinks(bool bDde, bool bOle) const;
 };
 
 }
--- source/ui/docshell/docsh.cxx	2015-11-25 04:55:38.000000000 -0800
+++ source/ui/docshell/docsh.cxx	2016-12-08 13:46:13.000000000 -0800
@@ -564,9 +564,12 @@
 
     GetUndoManager()->Clear();
 
-    bool bRet = SfxObjectShell::Load( rMedium );
-    if( bRet )
+    bool bRet = SfxObjectShell::Load(rMedium);
+    if (bRet)
     {
+        comphelper::EmbeddedObjectContainer& rEmbeddedObjectContainer = getEmbeddedObjectContainer();
+        rEmbeddedObjectContainer.setUserAllowsLinkUpdate(false);
+
         if (GetMedium())
         {
             SFX_ITEMSET_ARG( rMedium.GetItemSet(), pUpdateDocItem, SfxUInt16Item, SID_UPDATEDOCMODE, false);
--- source/ui/docshell/docsh4.cxx	2015-11-25 04:55:38.000000000 -0800
+++ source/ui/docshell/docsh4.cxx	2016-12-08 13:48:29.000000000 -0800
@@ -29,6 +29,7 @@
 
 #include "scitems.hxx"
 #include <sfx2/fcontnr.hxx>
+#include <sfx2/linkmgr.hxx>
 #include <sfx2/objface.hxx>
 #include <sfx2/docfile.hxx>
 #include <svtools/ehdl.hxx>
@@ -42,6 +43,7 @@
 #include <svx/drawitem.hxx>
 #include <svx/fmshell.hxx>
 #include <svtools/xwindowitem.hxx>
+#include <svx/svdoole2.hxx>
 #include <sfx2/passwd.hxx>
 #include <sfx2/filedlghelper.hxx>
 #include <sfx2/dispatch.hxx>
@@ -407,6 +409,9 @@
             break;
         case SID_UPDATETABLINKS:
             {
+                comphelper::EmbeddedObjectContainer& rEmbeddedObjectContainer = getEmbeddedObjectContainer();
+                rEmbeddedObjectContainer.setUserAllowsLinkUpdate(true);
+
                 ScDocument& rDoc = GetDocument();
 
                 ScLkUpdMode nSet = rDoc.GetLinkMode();
@@ -450,9 +455,9 @@
                     ReloadTabLinks();
                     aDocument.UpdateExternalRefLinks(GetActiveDialogParent());
 
-                    bool bAny = aDocument.GetDocLinkManager().updateDdeLinks(GetActiveDialogParent());
+                    bool bAnyDde = aDocument.GetDocLinkManager().updateDdeOrOleLinks(GetActiveDialogParent());
 
-                    if (bAny)
+                    if (bAnyDde)
                     {
                         //  Formeln berechnen und painten wie im TrackTimeHdl
                         aDocument.TrackFormulas();
@@ -468,7 +473,10 @@
                     rReq.Done();
                 }
                 else
+                {
+                    rEmbeddedObjectContainer.setUserAllowsLinkUpdate(false);
                     rReq.Ignore();
+                }
             }
             break;
 
--- source/ui/docshell/documentlinkmgr.cxx	2015-11-25 04:55:38.000000000 -0800
+++ source/ui/docshell/documentlinkmgr.cxx	2016-12-08 13:51:09.000000000 -0800
@@ -23,7 +23,7 @@
 #include <sc.hrc>
 #include <scresid.hxx>
 
-#include <sfx2/linkmgr.hxx>
+#include <svx/svdoole2.hxx>
 #include <vcl/layout.hxx>
 
 #include <boost/noncopyable.hpp>
@@ -115,6 +115,16 @@
 
 bool DocumentLinkManager::hasDdeLinks() const
 {
+    return hasDdeOrOleLinks(true, false);
+}
+
+bool DocumentLinkManager::hasDdeOrOleLinks() const
+{
+    return hasDdeOrOleLinks(true, true);
+}
+
+bool DocumentLinkManager::hasDdeOrOleLinks(bool bDde, bool bOle) const
+{
     if (!mpImpl->mpLinkManager)
         return false;
 
@@ -122,14 +132,16 @@
     for (size_t i = 0, n = rLinks.size(); i < n; ++i)
     {
         sfx2::SvBaseLink* pBase = *rLinks[i];
-        if (dynamic_cast<ScDdeLink*>(pBase))
+        if (bDde && dynamic_cast<ScDdeLink*>(pBase))
+            return true;
+        if (bOle && dynamic_cast<SdrEmbedObjectLink*>(pBase))
             return true;
     }
 
     return false;
 }
 
-bool DocumentLinkManager::updateDdeLinks( vcl::Window* pWin )
+bool DocumentLinkManager::updateDdeOrOleLinks( vcl::Window* pWin )
 {
     if (!mpImpl->mpLinkManager)
         return false;
@@ -143,6 +155,14 @@
     for (size_t i = 0, n = rLinks.size(); i < n; ++i)
     {
         sfx2::SvBaseLink* pBase = *rLinks[i];
+
+        SdrEmbedObjectLink* pOleLink = dynamic_cast<SdrEmbedObjectLink*>(pBase);
+        if (pOleLink)
+        {
+            pOleLink->Update();
+            continue;
+        }
+
         ScDdeLink* pDdeLink = dynamic_cast<ScDdeLink*>(pBase);
         if (!pDdeLink)
             continue;
--- source/ui/view/tabvwsh4.cxx	2015-11-25 04:55:38.000000000 -0800
+++ source/ui/view/tabvwsh4.cxx	2016-12-08 13:51:45.000000000 -0800
@@ -1633,7 +1633,7 @@
             if (!bLink)
             {
                 const sc::DocumentLinkManager& rMgr = rDoc.GetDocLinkManager();
-                if (rMgr.hasDdeLinks() || rDoc.HasAreaLinks())
+                if (rMgr.hasDdeOrOleLinks() || rDoc.HasAreaLinks())
                     bLink = true;
             }
             if (bLink)
--- inc/pivot.hxx	2015-11-25 07:55:38.000000000 -0500
+++ inc/pivot.hxx	2021-05-01 21:10:23.000000000 -0400
@@ -119,7 +119,6 @@
     css::sheet::DataPilotFieldReference maFieldRef;
 
     explicit ScPivotField( SCCOL nNewCol = 0, sal_uInt16 nNewFuncMask = PIVOT_FUNC_NONE );
-    ScPivotField( const ScPivotField& r );
 
     long getOriginalDim() const;
     bool                operator==( const ScPivotField& r ) const;
--- source/core/data/pivot2.cxx	2015-11-25 07:55:38.000000000 -0500
+++ source/core/data/pivot2.cxx	2021-05-02 07:26:17.000000000 -0400
@@ -112,14 +112,6 @@
     mnDupCount(0)
 {}
 
-ScPivotField::ScPivotField( const ScPivotField& rPivotField ) :
-    nCol(rPivotField.nCol),
-    mnOriginalDim(rPivotField.mnOriginalDim),
-    nFuncMask(rPivotField.nFuncMask),
-    mnDupCount(rPivotField.mnDupCount),
-    maFieldRef(rPivotField.maFieldRef)
-{}
-
 long ScPivotField::getOriginalDim() const
 {
     return mnOriginalDim >= 0 ? mnOriginalDim : static_cast<long>(nCol);
--- inc/celltextattr.hxx	2015-11-25 07:55:38.000000000 -0500
+++ inc/celltextattr.hxx	2021-05-07 08:33:29.000000000 -0400
@@ -20,7 +20,6 @@
     sal_uInt8 mnScriptType;
 
     CellTextAttr();
-    CellTextAttr(const CellTextAttr& r);
 };
 
 }
--- source/core/data/celltextattr.cxx	2015-11-25 07:55:38.000000000 -0500
+++ source/core/data/celltextattr.cxx	2021-05-07 08:27:08.000000000 -0400
@@ -16,10 +16,6 @@
     mnTextWidth(TEXTWIDTH_DIRTY),
     mnScriptType(SC_SCRIPTTYPE_UNKNOWN) {}
 
-CellTextAttr::CellTextAttr(const CellTextAttr& r) :
-    mnTextWidth(r.mnTextWidth),
-    mnScriptType(r.mnScriptType) {}
-
 }
 
 /* vim:set shiftwidth=4 softtabstop=4 expandtab: */
