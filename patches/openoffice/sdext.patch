--- source/pdfimport/tree/style.cxx	2014-02-25 00:26:58.000000000 -0800
+++ source/pdfimport/tree/style.cxx	2015-09-27 15:12:42.000000000 -0700
@@ -17,6 +17,14 @@
  * specific language governing permissions and limitations
  * under the License.
  * 
+ * This file incorporates work covered by the following license notice:
+ *
+ *   Portions of this file are part of the LibreOffice project.
+ *
+ *   This Source Code Form is subject to the terms of the Mozilla Public
+ *   License, v. 2.0. If a copy of the MPL was not distributed with this
+ *   file, You can obtain one at http://mozilla.org/MPL/2.0/.
+ *
  *************************************************************/
 
 
@@ -203,7 +211,11 @@
 
         for( unsigned int n = 0; n < rStyle.SubStyles.size(); ++n )
             impl_emitStyle( rStyle.SubStyles[n], rContext, rContainedElemVisitor );
+#if SUPD == 413
+        if( !rStyle.Contents.isEmpty() )
+#else	// SUPD == 413
         if( rStyle.Contents )
+#endif	// SUPD == 413
             rContext.rEmitter.write( rStyle.Contents );
         if( rStyle.ContainedElement )
             rStyle.ContainedElement->visitedBy( rContainedElemVisitor, 
--- source/pdfimport/xpdfwrapper/pdfioutdev_gpl.cxx	2014-02-25 00:26:59.000000000 -0800
+++ source/pdfimport/xpdfwrapper/pdfioutdev_gpl.cxx	2015-09-27 15:04:30.000000000 -0700
@@ -17,6 +17,14 @@
  * specific language governing permissions and limitations
  * under the License.
  * 
+ * This file incorporates work covered by the following license notice:
+ *
+ *   Portions of this file are part of the LibreOffice project.
+ *
+ *   This Source Code Form is subject to the terms of the Mozilla Public
+ *   License, v. 2.0. If a copy of the MPL was not distributed with this
+ *   file, You can obtain one at http://mozilla.org/MPL/2.0/.
+ *
  *************************************************************/
 
 #include "pdfioutdev_gpl.hxx"
@@ -36,7 +44,20 @@
 #pragma warning(push, 1)
 #endif
 
+#if SUPD == 413
+// sigh, UTF8.h was removed in poppler-0.21.0 and put back in 0.21.1
+// FIXME: we can't use #if POPPLER_CHECK_VERSION(0, 21, 0) && !POPPLER_CHECK_VERSION(0, 21, 1)
+//        because the internal poppler does not provide poppler-version.h and the macro always returns 0
+#if POPPLER_CHECK_VERSION(0, 21, 1)
 #include "UTF8.h"
+#elif POPPLER_CHECK_VERSION(0, 21, 0)
+#include "UTF.h"
+#else
+#include "UTF8.h"
+#endif
+#else	// SUPD == 413
+#include "UTF8.h"
+#endif	// SUPD == 413
 
 #if defined __SUNPRO_CC
 #pragma enable_warn
@@ -140,7 +161,15 @@
 void writeJpeg_( OutputBuffer& o_rOutputBuf, Stream* str, bool bWithLinefeed )
 {
     // dump JPEG file as-is
+#if SUPD == 413
+#if POPPLER_CHECK_VERSION(0, 17, 3)
+    str = str->getNextStream();
+#else
     str = ((DCTStream *)str)->getRawStream();
+#endif
+#else	// SUPD == 413
+    str = ((DCTStream *)str)->getRawStream();
+#endif	// SUPD == 413
     str->reset();
 
     int c;
@@ -388,8 +417,10 @@
     int nSize = 0;
 
     GooString* pFamily = gfxFont->getName();
+#if SUPD != 413
     if( ! pFamily )
         pFamily = gfxFont->getOrigName();
+#endif	// SUPD != 413
     if( pFamily )
     {
         aNewFont.familyName.clear();
@@ -466,7 +497,15 @@
 {
 }
 
+#if SUPD == 413
+void PDFOutDev::startPage(int /*pageNum*/, GfxState* state
+#if POPPLER_CHECK_VERSION(0, 23, 0) ||  POPPLER_CHECK_VERSION(0, 24, 0)
+                          , XRef* /*xref*/
+#endif
+)
+#else	// SUPD == 413
 void PDFOutDev::startPage(int /*pageNum*/, GfxState* state)
+#endif	// SUPD == 413
 {
     assert(state);
     printf("startPage %f %f\n",
@@ -479,7 +518,17 @@
     printf("endPage\n");
 }
 
+#if SUPD == 413
+#if POPPLER_CHECK_VERSION(0, 19, 0)
+void PDFOutDev::processLink(AnnotLink *link)
+#elif POPPLER_CHECK_VERSION(0, 17, 0)
+void PDFOutDev::processLink(AnnotLink *link, Catalog *)
+#else
+void PDFOutDev::processLink(Link* link, Catalog*)
+#endif
+#else	// SUPD == 413
 void PDFOutDev::processLink(Link* link, Catalog*)
+#endif	// SUPD == 413
 {
     assert(link);
 
@@ -815,6 +864,11 @@
         
 void PDFOutDev::drawImageMask(GfxState* pState, Object*, Stream* str,
                               int width, int height, GBool invert,
+#if SUPD == 413
+#if POPPLER_CHECK_VERSION(0, 12, 0)
+                              GBool /*interpolate*/,
+#endif
+#endif	// SUPD == 413
                               GBool /*inlineImg*/ )
 {
     OutputBuffer aBuf; initBuf(aBuf);
@@ -841,6 +895,11 @@
 
 void PDFOutDev::drawImage(GfxState*, Object*, Stream* str,
                           int width, int height, GfxImageColorMap* colorMap,
+#if SUPD == 413
+#if POPPLER_CHECK_VERSION(0, 12, 0)
+                          GBool /*interpolate*/,
+#endif
+#endif	// SUPD == 413
                           int* maskColors, GBool /*inlineImg*/ )
 {
     OutputBuffer aBuf; initBuf(aBuf);
@@ -887,9 +946,22 @@
 void PDFOutDev::drawMaskedImage(GfxState*, Object*, Stream* str,
                                 int width, int height,
                                 GfxImageColorMap* colorMap,
+#if SUPD == 413
+#if POPPLER_CHECK_VERSION(0, 12, 0)
+                                GBool /*interpolate*/,
+#endif
+#endif	// SUPD == 413
                                 Stream* maskStr, 
                                 int maskWidth, int maskHeight,
+#if SUPD == 413
+                                GBool maskInvert
+#if POPPLER_CHECK_VERSION(0, 12, 0)
+                                , GBool /*maskInterpolate*/
+#endif
+                               )
+#else	// SUPD == 413
                                 GBool maskInvert)
+#endif	// SUPD == 413
 {
     OutputBuffer aBuf;     initBuf(aBuf);
     printf( "drawImage %d %d 0", width, height );
@@ -910,9 +982,22 @@
 void PDFOutDev::drawSoftMaskedImage(GfxState*, Object*, Stream* str,
                                     int width, int height,
                                     GfxImageColorMap* colorMap,
+#if SUPD == 413
+#if POPPLER_CHECK_VERSION(0, 12, 0)
+                                    GBool /*interpolate*/,
+#endif
+#endif	// SUPD == 413
                                     Stream* maskStr,
                                     int maskWidth, int maskHeight,
+#if SUPD == 413
+                                    GfxImageColorMap* maskColorMap
+#if POPPLER_CHECK_VERSION(0, 12, 0)
+                                    , GBool /*maskInterpolate*/
+#endif
+                                   )
+#else	// SUPD == 413
                                     GfxImageColorMap* maskColorMap )
+#endif	// SUPD == 413
 {
     OutputBuffer aBuf;     initBuf(aBuf);
     printf( "drawImage %d %d 0", width, height );
--- source/pdfimport/xpdfwrapper/pdfioutdev_gpl.hxx	2014-02-25 00:26:59.000000000 -0800
+++ source/pdfimport/xpdfwrapper/pdfioutdev_gpl.hxx	2015-09-27 15:00:46.000000000 -0700
@@ -17,11 +17,23 @@
  * specific language governing permissions and limitations
  * under the License.
  * 
+ * This file incorporates work covered by the following license notice:
+ *
+ *   Portions of this file are part of the LibreOffice project.
+ *
+ *   This Source Code Form is subject to the terms of the Mozilla Public
+ *   License, v. 2.0. If a copy of the MPL was not distributed with this
+ *   file, You can obtain one at http://mozilla.org/MPL/2.0/.
+ *
  *************************************************************/
 
 #ifndef INCLUDED_PDFI_OUTDEV_HXX
 #define INCLUDED_PDFI_OUTDEV_HXX
 
+#if SUPD == 413
+#include <sal/types.h>
+#endif	// SUPD == 413
+
 #if defined __GNUC__
 #pragma GCC system_header
 #elif defined __SUNPRO_CC
@@ -57,6 +69,13 @@
 #ifndef SYSTEM_POPPLER
 typedef GString GooString;
 #endif
+#if SUPD == 413
+#include <cpp/poppler-version.h>
+#define POPPLER_CHECK_VERSION(major,minor,micro) \
+  (POPPLER_VERSION_MAJOR > (major) || \
+   (POPPLER_VERSION_MAJOR == (major) && POPPLER_VERSION_MINOR > (minor)) || \
+   (POPPLER_VERSION_MAJOR == (major) && POPPLER_VERSION_MINOR == (minor) && POPPLER_VERSION_MICRO >= (micro)))
+#endif	// SUPD == 413
 
 namespace pdfi
 {
@@ -170,7 +189,15 @@
         virtual void setDefaultCTM(double *ctm);
         
         // Start a page.
+#if SUPD == 413
+        virtual void startPage(int pageNum, GfxState *state
+#if POPPLER_CHECK_VERSION(0, 23, 0) || POPPLER_CHECK_VERSION(0, 24, 0)
+                               , XRef *xref
+#endif
+        ) SAL_OVERRIDE;
+#else	// SUPD == 413
         virtual void startPage(int pageNum, GfxState *state);
+#endif	// SUPD == 413
         
         // End a page.
         virtual void endPage();
@@ -185,7 +212,17 @@
         // virtual void cvtUserToDev(double ux, double uy, int *dx, int *dy);
         
         //----- link borders
+#if SUPD == 413
+	#if POPPLER_CHECK_VERSION(0, 19, 0)
+        virtual void processLink(AnnotLink *link) SAL_OVERRIDE;
+    #elif POPPLER_CHECK_VERSION(0, 17, 0)
+        virtual void processLink(AnnotLink *link, Catalog *catalog) SAL_OVERRIDE;
+    #else
+        virtual void processLink(Link *link, Catalog *catalog) SAL_OVERRIDE;
+    #endif
+#else	// SUPD == 413
         virtual void processLink(Link *link, Catalog *catalog);
+#endif	// SUPD == 413
         
         //----- save/restore graphics state
         virtual void saveState(GfxState *state);
@@ -238,21 +275,61 @@
         //----- image drawing
         virtual void drawImageMask(GfxState *state, Object *ref, Stream *str,
                                    int width, int height, GBool invert,
+#if SUPD == 413
+#if POPPLER_CHECK_VERSION(0, 12, 0)
+                                   GBool interpolate,
+#endif
+                                   GBool inlineImg) SAL_OVERRIDE;
+#else	// SUPD == 413
                                    GBool inlineImg);
+#endif	// SUPD == 413
         virtual void drawImage(GfxState *state, Object *ref, Stream *str,
                                int width, int height, GfxImageColorMap *colorMap,
+#if SUPD == 413
+#if POPPLER_CHECK_VERSION(0, 12, 0)
+                               GBool interpolate,
+#endif
+                               int *maskColors, GBool inlineImg) SAL_OVERRIDE;
+#else	// SUPD == 413
                                int *maskColors, GBool inlineImg);
+#endif	// SUPD == 413
         virtual void drawMaskedImage(GfxState *state, Object *ref, Stream *str,
                                      int width, int height,
                                      GfxImageColorMap *colorMap,
+#if SUPD == 413
+#if POPPLER_CHECK_VERSION(0, 12, 0)
+                                     GBool interpolate,
+#endif
+#endif	// SUPD == 413
                                      Stream *maskStr, int maskWidth, int maskHeight,
+#if SUPD == 413
+                                     GBool maskInvert
+#if POPPLER_CHECK_VERSION(0, 12, 0)
+                                     , GBool maskInterpolate
+#endif
+                                    ) SAL_OVERRIDE;
+#else	// SUPD == 413
                                      GBool maskInvert);
+#endif	// SUPD == 413
         virtual void drawSoftMaskedImage(GfxState *state, Object *ref, Stream *str,
                                          int width, int height,
                                          GfxImageColorMap *colorMap,
+#if SUPD == 413
+#if POPPLER_CHECK_VERSION(0, 12, 0)
+                                         GBool interpolate,
+#endif
+#endif	// SUPD == 413
                                          Stream *maskStr,
                                          int maskWidth, int maskHeight,
+#if SUPD == 413
+                                         GfxImageColorMap *maskColorMap
+#if POPPLER_CHECK_VERSION(0, 12, 0)
+                                         , GBool maskInterpolate
+#endif
+                                        ) SAL_OVERRIDE;
+#else	// SUPD == 413
                                          GfxImageColorMap *maskColorMap);
+#endif	// SUPD == 413
         
         //----- OPI functions
         // virtual void opiBegin(GfxState *state, Dict *opiDict);
--- source/pdfimport/xpdfwrapper/pnghelper.cxx	2014-02-25 00:26:59.000000000 -0800
+++ source/pdfimport/xpdfwrapper/pnghelper.cxx	2015-09-27 15:07:05.000000000 -0700
@@ -17,6 +17,14 @@
  * specific language governing permissions and limitations
  * under the License.
  * 
+ * This file incorporates work covered by the following license notice:
+ *
+ *   Portions of this file are part of the LibreOffice project.
+ *
+ *   This Source Code Form is subject to the terms of the Mozilla Public
+ *   License, v. 2.0. If a copy of the MPL was not distributed with this
+ *   file, You can obtain one at http://mozilla.org/MPL/2.0/.
+ *
  *************************************************************/
 
 #include "pnghelper.hxx"
@@ -121,7 +129,11 @@
 
 void PngHelper::appendFileHeader( OutputBuffer& o_rOutputBuf )
 {
+#if SUPD == 413
+    static const unsigned char aHeader[] = { 0x89, 0x50, 0x4e, 0x47, 0x0d, 0x0a, 0x1a, 0x0a };
+#else	// SUPD == 413
     static const Output_t aHeader[] = { 0x89, 0x50, 0x4e, 0x47, 0x0d, 0x0a, 0x1a, 0x0a };
+#endif	// SUPD == 413
 
     o_rOutputBuf.insert( o_rOutputBuf.end(), aHeader, aHeader + sizeof(aHeader)/sizeof(aHeader[0]) );
 }
--- source/pdfimport/config/description.xml	2014-02-25 00:26:59.000000000 -0800
+++ source/pdfimport/config/description.xml	2015-09-28 20:51:59.000000000 -0700
@@ -39,7 +39,8 @@
 
     <version value="1.1.0" />
 
-    <platform value="UPDATED_SUPPORTED_PLATFORM"/>
+    <!-- Extension won't install if the following tag is enabled -->
+    <!--<platform value="UPDATED_SUPPORTED_PLATFORM"/>-->
 
     <publisher>
         <name xlink:href="http://www.openoffice.org" lang="en">Apache Software Foundation</name>
