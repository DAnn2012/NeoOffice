Index: inc/comphelper/guarding.hxx
===================================================================
RCS file: /cvs/util/comphelper/inc/comphelper/guarding.hxx,v
retrieving revision 1.1.1.1
diff -u -r1.1.1.1 guarding.hxx
--- inc/comphelper/guarding.hxx	29 Sep 2000 11:28:15 -0000	1.1.1.1
+++ inc/comphelper/guarding.hxx	23 Oct 2005 16:58:37 -0000
@@ -115,18 +115,18 @@
 
 	const OReusableGuard& operator= (const OReusableGuard& _rMaster)
 	{
-		clear();
-		pT = _rMaster.pT;
-		if (pT)
-			pT->acquire();
+		::osl::ClearableGuard<T>::clear();
+		::osl::ClearableGuard<T>::pT = _rMaster.pT;
+		if (::osl::ClearableGuard<T>::pT)
+			::osl::ClearableGuard<T>::pT->acquire();
 		return *this;
 	}
 
 	void attach(T& rMutex)
 	{
-		clear();
-		pT = &rMutex;
-		pT->acquire();
+		::osl::ClearableGuard<T>::clear();
+		::osl::ClearableGuard<T>::pT = &rMutex;
+		::osl::ClearableGuard<T>::pT->acquire();
 	}
 };
 
Index: inc/comphelper/property.hxx
===================================================================
RCS file: /cvs/util/comphelper/inc/comphelper/property.hxx,v
retrieving revision 1.4
diff -u -r1.4 property.hxx
--- inc/comphelper/property.hxx	19 Mar 2003 15:58:31 -0000	1.4
+++ inc/comphelper/property.hxx	23 Oct 2005 16:58:37 -0000
@@ -179,7 +179,7 @@
 template <class ENUMTYPE>
 sal_Bool tryPropertyValueEnum(staruno::Any& /*out*/_rConvertedValue, staruno::Any& /*out*/_rOldValue, const staruno::Any& _rValueToSet, const ENUMTYPE& _rCurrentValue)
 {
-	if (::getCppuType(&_rCurrentValue).getTypeClass() != staruno::TypeClass_ENUM)
+	if (getCppuType(&_rCurrentValue).getTypeClass() != staruno::TypeClass_ENUM)
 		return tryPropertyValue(_rConvertedValue, _rOldValue, _rValueToSet, _rCurrentValue);
 
 	sal_Bool bModified(sal_False);
Index: inc/comphelper/querydeep.hxx
===================================================================
RCS file: /cvs/util/comphelper/inc/comphelper/querydeep.hxx,v
retrieving revision 1.1.1.1
diff -u -r1.1.1.1 querydeep.hxx
--- inc/comphelper/querydeep.hxx	29 Sep 2000 11:28:15 -0000	1.1.1.1
+++ inc/comphelper/querydeep.hxx	23 Oct 2005 16:58:38 -0000
@@ -103,7 +103,7 @@
 {
 	return isDerivedFrom(
 				rBaseType,
-				::getCppuType(static_cast<const ::com::sun::star::uno::Reference<Interface> *>(0)));
+				Interface::static_type());
 }
 
 //--------------------------------------------------------------------------------------------------------
@@ -122,7 +122,7 @@
 	const ::com::sun::star::uno::Type & rType,
 	Interface1 * p1 )
 {
-	if (isDerivedFrom(rType, ::getCppuType(static_cast<const ::com::sun::star::uno::Reference< Interface1 > *>(0))))
+	if (isDerivedFrom(rType, Interface1::static_type()))
 		return ::com::sun::star::uno::Any( &p1, rType );
 	else
 		return ::com::sun::star::uno::Any();
@@ -139,9 +139,9 @@
 	const ::com::sun::star::uno::Type & rType,
 	Interface1 * p1, Interface2 * p2 )
 {
-	if (isDerivedFrom(rType, ::getCppuType(static_cast<const ::com::sun::star::uno::Reference< Interface1 > *>(0))))
+	if (isDerivedFrom(rType, Interface1::static_type()))
 		return ::com::sun::star::uno::Any( &p1, rType );
-	else if (isDerivedFrom(rType, ::getCppuType(static_cast<const ::com::sun::star::uno::Reference< Interface2 > *>(0))))
+	else if (isDerivedFrom(rType, Interface2::static_type()))
 		return ::com::sun::star::uno::Any( &p2, rType );
 	else
 		return ::com::sun::star::uno::Any();
@@ -159,11 +159,11 @@
 	const ::com::sun::star::uno::Type & rType,
 	Interface1 * p1, Interface2 * p2, Interface3 * p3 )
 {
-	if (isDerivedFrom(rType, ::getCppuType(static_cast<const ::com::sun::star::uno::Reference< Interface1 > *>(0))))
+	if (isDerivedFrom(rType, Interface1::static_type()))
 		return ::com::sun::star::uno::Any( &p1, rType );
-	else if (isDerivedFrom(rType, ::getCppuType(static_cast<const ::com::sun::star::uno::Reference< Interface2 > *>(0))))
+	else if (isDerivedFrom(rType, Interface2::static_type()))
 		return ::com::sun::star::uno::Any( &p2, rType );
-	else if (isDerivedFrom(rType, ::getCppuType(static_cast<const ::com::sun::star::uno::Reference< Interface3 > *>(0))))
+	else if (isDerivedFrom(rType, Interface3::static_type()))
 		return ::com::sun::star::uno::Any( &p3, rType );
 	else
 		return ::com::sun::star::uno::Any();
@@ -182,13 +182,13 @@
 	const ::com::sun::star::uno::Type & rType,
 	Interface1 * p1, Interface2 * p2, Interface3 * p3, Interface4 * p4 )
 {
-	if (isDerivedFrom(rType, ::getCppuType(static_cast<const ::com::sun::star::uno::Reference< Interface1 > *>(0))))
+	if (isDerivedFrom(rType, Interface1::static_type()))
 		return ::com::sun::star::uno::Any( &p1, rType );
-	else if (isDerivedFrom(rType, ::getCppuType(static_cast<const ::com::sun::star::uno::Reference< Interface2 > *>(0))))
+	else if (isDerivedFrom(rType, Interface2::static_type()))
 		return ::com::sun::star::uno::Any( &p2, rType );
-	else if (isDerivedFrom(rType, ::getCppuType(static_cast<const ::com::sun::star::uno::Reference< Interface3 > *>(0))))
+	else if (isDerivedFrom(rType, Interface3::static_type()))
 		return ::com::sun::star::uno::Any( &p3, rType );
-	else if (isDerivedFrom(rType, ::getCppuType(static_cast<const ::com::sun::star::uno::Reference< Interface4 > *>(0))))
+	else if (isDerivedFrom(rType, Interface4::static_type()))
 		return ::com::sun::star::uno::Any( &p4, rType );
 	else
 		return ::com::sun::star::uno::Any();
@@ -208,15 +208,15 @@
 	const ::com::sun::star::uno::Type & rType,
 	Interface1 * p1, Interface2 * p2, Interface3 * p3, Interface4 * p4, Interface5 * p5 )
 {
-	if (isDerivedFrom(rType, ::getCppuType(static_cast<const ::com::sun::star::uno::Reference< Interface1 > *>(0))))
+	if (isDerivedFrom(rType, Interface1::static_type()))
 		return ::com::sun::star::uno::Any( &p1, rType );
-	else if (isDerivedFrom(rType, ::getCppuType(static_cast<const ::com::sun::star::uno::Reference< Interface2 > *>(0))))
+	else if (isDerivedFrom(rType, Interface2::static_type()))
 		return ::com::sun::star::uno::Any( &p2, rType );
-	else if (isDerivedFrom(rType, ::getCppuType(static_cast<const ::com::sun::star::uno::Reference< Interface3 > *>(0))))
+	else if (isDerivedFrom(rType, Interface3::static_type()))
 		return ::com::sun::star::uno::Any( &p3, rType );
-	else if (isDerivedFrom(rType, ::getCppuType(static_cast<const ::com::sun::star::uno::Reference< Interface4 > *>(0))))
+	else if (isDerivedFrom(rType, Interface4::static_type()))
 		return ::com::sun::star::uno::Any( &p4, rType );
-	else if (isDerivedFrom(rType, ::getCppuType(static_cast<const ::com::sun::star::uno::Reference< Interface5 > *>(0))))
+	else if (isDerivedFrom(rType, Interface5::static_type()))
 		return ::com::sun::star::uno::Any( &p5, rType );
 	else
 		return ::com::sun::star::uno::Any();
@@ -239,17 +239,17 @@
 	Interface1 * p1, Interface2 * p2, Interface3 * p3, Interface4 * p4, Interface5 * p5,
 	Interface6 * p6 )
 {
-	if (isDerivedFrom(rType, ::getCppuType(static_cast<const ::com::sun::star::uno::Reference< Interface1 > *>(0))))
+	if (isDerivedFrom(rType, Interface1::static_type()))
 		return ::com::sun::star::uno::Any( &p1, rType );
-	else if (isDerivedFrom(rType, ::getCppuType(static_cast<const ::com::sun::star::uno::Reference< Interface2 > *>(0))))
+	else if (isDerivedFrom(rType, Interface2::static_type()))
 		return ::com::sun::star::uno::Any( &p2, rType );
-	else if (isDerivedFrom(rType, ::getCppuType(static_cast<const ::com::sun::star::uno::Reference< Interface3 > *>(0))))
+	else if (isDerivedFrom(rType, Interface3::static_type()))
 		return ::com::sun::star::uno::Any( &p3, rType );
-	else if (isDerivedFrom(rType, ::getCppuType(static_cast<const ::com::sun::star::uno::Reference< Interface4 > *>(0))))
+	else if (isDerivedFrom(rType, Interface4::static_type()))
 		return ::com::sun::star::uno::Any( &p4, rType );
-	else if (isDerivedFrom(rType, ::getCppuType(static_cast<const ::com::sun::star::uno::Reference< Interface5 > *>(0))))
+	else if (isDerivedFrom(rType, Interface5::static_type()))
 		return ::com::sun::star::uno::Any( &p5, rType );
-	else if (isDerivedFrom(rType, ::getCppuType(static_cast<const ::com::sun::star::uno::Reference< Interface6 > *>(0))))
+	else if (isDerivedFrom(rType, Interface6::static_type()))
 		return ::com::sun::star::uno::Any( &p6, rType );
 	else
 		return ::com::sun::star::uno::Any();
@@ -273,19 +273,19 @@
 	Interface1 * p1, Interface2 * p2, Interface3 * p3, Interface4 * p4, Interface5 * p5,
 	Interface6 * p6, Interface7 * p7 )
 {
-	if (isDerivedFrom(rType, ::getCppuType(static_cast<const ::com::sun::star::uno::Reference< Interface1 > *>(0))))
+	if (isDerivedFrom(rType, Interface1::static_type()))
 		return ::com::sun::star::uno::Any( &p1, rType );
-	else if (isDerivedFrom(rType, ::getCppuType(static_cast<const ::com::sun::star::uno::Reference< Interface2 > *>(0))))
+	else if (isDerivedFrom(rType, Interface2::static_type()))
 		return ::com::sun::star::uno::Any( &p2, rType );
-	else if (isDerivedFrom(rType, ::getCppuType(static_cast<const ::com::sun::star::uno::Reference< Interface3 > *>(0))))
+	else if (isDerivedFrom(rType, Interface3::static_type()))
 		return ::com::sun::star::uno::Any( &p3, rType );
-	else if (isDerivedFrom(rType, ::getCppuType(static_cast<const ::com::sun::star::uno::Reference< Interface4 > *>(0))))
+	else if (isDerivedFrom(rType, Interface4::static_type()))
 		return ::com::sun::star::uno::Any( &p4, rType );
-	else if (isDerivedFrom(rType, ::getCppuType(static_cast<const ::com::sun::star::uno::Reference< Interface5 > *>(0))))
+	else if (isDerivedFrom(rType, Interface5::static_type()))
 		return ::com::sun::star::uno::Any( &p5, rType );
-	else if (isDerivedFrom(rType, ::getCppuType(static_cast<const ::com::sun::star::uno::Reference< Interface6 > *>(0))))
+	else if (isDerivedFrom(rType, Interface6::static_type()))
 		return ::com::sun::star::uno::Any( &p6, rType );
-	else if (isDerivedFrom(rType, ::getCppuType(static_cast<const ::com::sun::star::uno::Reference< Interface7 > *>(0))))
+	else if (isDerivedFrom(rType, Interface7::static_type()))
 		return ::com::sun::star::uno::Any( &p7, rType );
 	else
 		return ::com::sun::star::uno::Any();
@@ -310,21 +310,21 @@
 	Interface1 * p1, Interface2 * p2, Interface3 * p3, Interface4 * p4, Interface5 * p5,
 	Interface6 * p6, Interface7 * p7, Interface8 * p8 )
 {
-	if (isDerivedFrom(rType, ::getCppuType(static_cast<const ::com::sun::star::uno::Reference< Interface1 > *>(0))))
+	if (isDerivedFrom(rType, Interface1::static_type()))
 		return ::com::sun::star::uno::Any( &p1, rType );
-	else if (isDerivedFrom(rType, ::getCppuType(static_cast<const ::com::sun::star::uno::Reference< Interface2 > *>(0))))
+	else if (isDerivedFrom(rType, Interface2::static_type()))
 		return ::com::sun::star::uno::Any( &p2, rType );
-	else if (isDerivedFrom(rType, ::getCppuType(static_cast<const ::com::sun::star::uno::Reference< Interface3 > *>(0))))
+	else if (isDerivedFrom(rType, Interface3::static_type()))
 		return ::com::sun::star::uno::Any( &p3, rType );
-	else if (isDerivedFrom(rType, ::getCppuType(static_cast<const ::com::sun::star::uno::Reference< Interface4 > *>(0))))
+	else if (isDerivedFrom(rType, Interface4::static_type()))
 		return ::com::sun::star::uno::Any( &p4, rType );
-	else if (isDerivedFrom(rType, ::getCppuType(static_cast<const ::com::sun::star::uno::Reference< Interface5 > *>(0))))
+	else if (isDerivedFrom(rType, Interface5::static_type()))
 		return ::com::sun::star::uno::Any( &p5, rType );
-	else if (isDerivedFrom(rType, ::getCppuType(static_cast<const ::com::sun::star::uno::Reference< Interface6 > *>(0))))
+	else if (isDerivedFrom(rType, Interface6::static_type()))
 		return ::com::sun::star::uno::Any( &p6, rType );
-	else if (isDerivedFrom(rType, ::getCppuType(static_cast<const ::com::sun::star::uno::Reference< Interface7 > *>(0))))
+	else if (isDerivedFrom(rType, Interface7::static_type()))
 		return ::com::sun::star::uno::Any( &p7, rType );
-	else if (isDerivedFrom(rType, ::getCppuType(static_cast<const ::com::sun::star::uno::Reference< Interface8 > *>(0))))
+	else if (isDerivedFrom(rType, Interface8::static_type()))
 		return ::com::sun::star::uno::Any( &p8, rType );
 	else
 		return ::com::sun::star::uno::Any();
@@ -350,23 +350,23 @@
 	Interface1 * p1, Interface2 * p2, Interface3 * p3, Interface4 * p4, Interface5 * p5,
 	Interface6 * p6, Interface7 * p7, Interface8 * p8, Interface9 * p9 )
 {
-	if (isDerivedFrom(rType, ::getCppuType(static_cast<const ::com::sun::star::uno::Reference< Interface1 > *>(0))))
+	if (isDerivedFrom(rType, Interface1::static_type()))
 		return ::com::sun::star::uno::Any( &p1, rType );
-	else if (isDerivedFrom(rType, ::getCppuType(static_cast<const ::com::sun::star::uno::Reference< Interface2 > *>(0))))
+	else if (isDerivedFrom(rType, Interface2::static_type()))
 		return ::com::sun::star::uno::Any( &p2, rType );
-	else if (isDerivedFrom(rType, ::getCppuType(static_cast<const ::com::sun::star::uno::Reference< Interface3 > *>(0))))
+	else if (isDerivedFrom(rType, Interface3::static_type()))
 		return ::com::sun::star::uno::Any( &p3, rType );
-	else if (isDerivedFrom(rType, ::getCppuType(static_cast<const ::com::sun::star::uno::Reference< Interface4 > *>(0))))
+	else if (isDerivedFrom(rType, Interface4::static_type()))
 		return ::com::sun::star::uno::Any( &p4, rType );
-	else if (isDerivedFrom(rType, ::getCppuType(static_cast<const ::com::sun::star::uno::Reference< Interface5 > *>(0))))
+	else if (isDerivedFrom(rType, Interface5::static_type()))
 		return ::com::sun::star::uno::Any( &p5, rType );
-	else if (isDerivedFrom(rType, ::getCppuType(static_cast<const ::com::sun::star::uno::Reference< Interface6 > *>(0))))
+	else if (isDerivedFrom(rType, Interface6::static_type()))
 		return ::com::sun::star::uno::Any( &p6, rType );
-	else if (isDerivedFrom(rType, ::getCppuType(static_cast<const ::com::sun::star::uno::Reference< Interface7 > *>(0))))
+	else if (isDerivedFrom(rType, Interface7::static_type()))
 		return ::com::sun::star::uno::Any( &p7, rType );
-	else if (isDerivedFrom(rType, ::getCppuType(static_cast<const ::com::sun::star::uno::Reference< Interface8 > *>(0))))
+	else if (isDerivedFrom(rType, Interface8::static_type()))
 		return ::com::sun::star::uno::Any( &p8, rType );
-	else if (isDerivedFrom(rType, ::getCppuType(static_cast<const ::com::sun::star::uno::Reference< Interface9 > *>(0))))
+	else if (isDerivedFrom(rType, Interface9::static_type()))
 		return ::com::sun::star::uno::Any( &p9, rType );
 	else
 		return ::com::sun::star::uno::Any();
@@ -393,25 +393,25 @@
 	Interface1 * p1, Interface2 * p2, Interface3 * p3, Interface4 * p4, Interface5 * p5,
 	Interface6 * p6, Interface7 * p7, Interface8 * p8, Interface9 * p9, Interface10 * p10 )
 {
-	if (isDerivedFrom(rType, ::getCppuType(static_cast<const ::com::sun::star::uno::Reference< Interface1 > *>(0))))
+	if (isDerivedFrom(rType, Interface1::static_type()))
 		return ::com::sun::star::uno::Any( &p1, rType );
-	else if (isDerivedFrom(rType, ::getCppuType(static_cast<const ::com::sun::star::uno::Reference< Interface2 > *>(0))))
+	else if (isDerivedFrom(rType, Interface2::static_type()))
 		return ::com::sun::star::uno::Any( &p2, rType );
-	else if (isDerivedFrom(rType, ::getCppuType(static_cast<const ::com::sun::star::uno::Reference< Interface3 > *>(0))))
+	else if (isDerivedFrom(rType, Interface3::static_type()))
 		return ::com::sun::star::uno::Any( &p3, rType );
-	else if (isDerivedFrom(rType, ::getCppuType(static_cast<const ::com::sun::star::uno::Reference< Interface4 > *>(0))))
+	else if (isDerivedFrom(rType, Interface4::static_type()))
 		return ::com::sun::star::uno::Any( &p4, rType );
-	else if (isDerivedFrom(rType, ::getCppuType(static_cast<const ::com::sun::star::uno::Reference< Interface5 > *>(0))))
+	else if (isDerivedFrom(rType, Interface5::static_type()))
 		return ::com::sun::star::uno::Any( &p5, rType );
-	else if (isDerivedFrom(rType, ::getCppuType(static_cast<const ::com::sun::star::uno::Reference< Interface6 > *>(0))))
+	else if (isDerivedFrom(rType, Interface6::static_type()))
 		return ::com::sun::star::uno::Any( &p6, rType );
-	else if (isDerivedFrom(rType, ::getCppuType(static_cast<const ::com::sun::star::uno::Reference< Interface7 > *>(0))))
+	else if (isDerivedFrom(rType, Interface7::static_type()))
 		return ::com::sun::star::uno::Any( &p7, rType );
-	else if (isDerivedFrom(rType, ::getCppuType(static_cast<const ::com::sun::star::uno::Reference< Interface8 > *>(0))))
+	else if (isDerivedFrom(rType, Interface8::static_type()))
 		return ::com::sun::star::uno::Any( &p8, rType );
-	else if (isDerivedFrom(rType, ::getCppuType(static_cast<const ::com::sun::star::uno::Reference< Interface9 > *>(0))))
+	else if (isDerivedFrom(rType, Interface9::static_type()))
 		return ::com::sun::star::uno::Any( &p9, rType );
-	else if (isDerivedFrom(rType, ::getCppuType(static_cast<const ::com::sun::star::uno::Reference< Interface10 > *>(0))))
+	else if (isDerivedFrom(rType, Interface10::static_type()))
 		return ::com::sun::star::uno::Any( &p10, rType );
 	else
 		return ::com::sun::star::uno::Any();
@@ -441,27 +441,27 @@
 	Interface6 * p6, Interface7 * p7, Interface8 * p8, Interface9 * p9, Interface10 * p10,
 	Interface11 * p11 )
 {
-	if (isDerivedFrom(rType, ::getCppuType(static_cast<const ::com::sun::star::uno::Reference< Interface1 > *>(0))))
+	if (isDerivedFrom(rType, Interface1::static_type()))
 		return ::com::sun::star::uno::Any( &p1, rType );
-	else if (isDerivedFrom(rType, ::getCppuType(static_cast<const ::com::sun::star::uno::Reference< Interface2 > *>(0))))
+	else if (isDerivedFrom(rType, Interface2::static_type()))
 		return ::com::sun::star::uno::Any( &p2, rType );
-	else if (isDerivedFrom(rType, ::getCppuType(static_cast<const ::com::sun::star::uno::Reference< Interface3 > *>(0))))
+	else if (isDerivedFrom(rType, Interface3::static_type()))
 		return ::com::sun::star::uno::Any( &p3, rType );
-	else if (isDerivedFrom(rType, ::getCppuType(static_cast<const ::com::sun::star::uno::Reference< Interface4 > *>(0))))
+	else if (isDerivedFrom(rType, Interface4::static_type()))
 		return ::com::sun::star::uno::Any( &p4, rType );
-	else if (isDerivedFrom(rType, ::getCppuType(static_cast<const ::com::sun::star::uno::Reference< Interface5 > *>(0))))
+	else if (isDerivedFrom(rType, Interface5::static_type()))
 		return ::com::sun::star::uno::Any( &p5, rType );
-	else if (isDerivedFrom(rType, ::getCppuType(static_cast<const ::com::sun::star::uno::Reference< Interface6 > *>(0))))
+	else if (isDerivedFrom(rType, Interface6::static_type()))
 		return ::com::sun::star::uno::Any( &p6, rType );
-	else if (isDerivedFrom(rType, ::getCppuType(static_cast<const ::com::sun::star::uno::Reference< Interface7 > *>(0))))
+	else if (isDerivedFrom(rType, Interface7::static_type()))
 		return ::com::sun::star::uno::Any( &p7, rType );
-	else if (isDerivedFrom(rType, ::getCppuType(static_cast<const ::com::sun::star::uno::Reference< Interface8 > *>(0))))
+	else if (isDerivedFrom(rType, Interface8::static_type()))
 		return ::com::sun::star::uno::Any( &p8, rType );
-	else if (isDerivedFrom(rType, ::getCppuType(static_cast<const ::com::sun::star::uno::Reference< Interface9 > *>(0))))
+	else if (isDerivedFrom(rType, Interface9::static_type()))
 		return ::com::sun::star::uno::Any( &p9, rType );
-	else if (isDerivedFrom(rType, ::getCppuType(static_cast<const ::com::sun::star::uno::Reference< Interface10 > *>(0))))
+	else if (isDerivedFrom(rType, Interface10::static_type()))
 		return ::com::sun::star::uno::Any( &p10, rType );
-	else if (isDerivedFrom(rType, ::getCppuType(static_cast<const ::com::sun::star::uno::Reference< Interface11 > *>(0))))
+	else if (isDerivedFrom(rType, Interface11::static_type()))
 		return ::com::sun::star::uno::Any( &p11, rType );
 	else
 		return ::com::sun::star::uno::Any();
@@ -492,29 +492,29 @@
 	Interface6 * p6, Interface7 * p7, Interface8 * p8, Interface9 * p9, Interface10 * p10,
 	Interface11 * p11, Interface12 * p12 )
 {
-	if (isDerivedFrom(rType, ::getCppuType(static_cast<const ::com::sun::star::uno::Reference< Interface1 > *>(0))))
+	if (isDerivedFrom(rType, Interface1::static_type()))
 		return ::com::sun::star::uno::Any( &p1, rType );
-	else if (isDerivedFrom(rType, ::getCppuType(static_cast<const ::com::sun::star::uno::Reference< Interface2 > *>(0))))
+	else if (isDerivedFrom(rType, Interface2::static_type()))
 		return ::com::sun::star::uno::Any( &p2, rType );
-	else if (isDerivedFrom(rType, ::getCppuType(static_cast<const ::com::sun::star::uno::Reference< Interface3 > *>(0))))
+	else if (isDerivedFrom(rType, Interface3::static_type()))
 		return ::com::sun::star::uno::Any( &p3, rType );
-	else if (isDerivedFrom(rType, ::getCppuType(static_cast<const ::com::sun::star::uno::Reference< Interface4 > *>(0))))
+	else if (isDerivedFrom(rType, Interface4::static_type()))
 		return ::com::sun::star::uno::Any( &p4, rType );
-	else if (isDerivedFrom(rType, ::getCppuType(static_cast<const ::com::sun::star::uno::Reference< Interface5 > *>(0))))
+	else if (isDerivedFrom(rType, Interface5::static_type()))
 		return ::com::sun::star::uno::Any( &p5, rType );
-	else if (isDerivedFrom(rType, ::getCppuType(static_cast<const ::com::sun::star::uno::Reference< Interface6 > *>(0))))
+	else if (isDerivedFrom(rType, Interface6::static_type()))
 		return ::com::sun::star::uno::Any( &p6, rType );
-	else if (isDerivedFrom(rType, ::getCppuType(static_cast<const ::com::sun::star::uno::Reference< Interface7 > *>(0))))
+	else if (isDerivedFrom(rType, Interface7::static_type()))
 		return ::com::sun::star::uno::Any( &p7, rType );
-	else if (isDerivedFrom(rType, ::getCppuType(static_cast<const ::com::sun::star::uno::Reference< Interface8 > *>(0))))
+	else if (isDerivedFrom(rType, Interface8::static_type()))
 		return ::com::sun::star::uno::Any( &p8, rType );
-	else if (isDerivedFrom(rType, ::getCppuType(static_cast<const ::com::sun::star::uno::Reference< Interface9 > *>(0))))
+	else if (isDerivedFrom(rType, Interface9::static_type()))
 		return ::com::sun::star::uno::Any( &p9, rType );
-	else if (isDerivedFrom(rType, ::getCppuType(static_cast<const ::com::sun::star::uno::Reference< Interface10 > *>(0))))
+	else if (isDerivedFrom(rType, Interface10::static_type()))
 		return ::com::sun::star::uno::Any( &p10, rType );
-	else if (isDerivedFrom(rType, ::getCppuType(static_cast<const ::com::sun::star::uno::Reference< Interface11 > *>(0))))
+	else if (isDerivedFrom(rType, Interface11::static_type()))
 		return ::com::sun::star::uno::Any( &p11, rType );
-	else if (isDerivedFrom(rType, ::getCppuType(static_cast<const ::com::sun::star::uno::Reference< Interface12 > *>(0))))
+	else if (isDerivedFrom(rType, Interface12::static_type()))
 		return ::com::sun::star::uno::Any( &p12, rType );
 	else
 		return ::com::sun::star::uno::Any();
Index: inc/comphelper/types.hxx
===================================================================
RCS file: /cvs/util/comphelper/inc/comphelper/types.hxx,v
retrieving revision 1.5
diff -u -r1.5 types.hxx
--- inc/comphelper/types.hxx	19 Nov 2000 15:20:37 -0000	1.5
+++ inc/comphelper/types.hxx	23 Oct 2005 16:58:38 -0000
@@ -133,7 +133,7 @@
 	template <class TYPE>
 	sal_Bool isA(const staruno::Type& _rType, TYPE* pDummy)
 	{
-		return  _rType.equals(::getCppuType(pDummy));
+		return  _rType.equals(getCppuType(pDummy));
 	}
 
 	//-------------------------------------------------------------------------
@@ -143,7 +143,7 @@
 	template <class TYPE>
 	sal_Bool isA(const staruno::Any& _rVal, TYPE* pDummy)
 	{
-		return  _rVal.getValueType().equals(::getCppuType(pDummy));
+		return  _rVal.getValueType().equals(getCppuType(pDummy));
 	}
 
 	//-------------------------------------------------------------------------
@@ -152,7 +152,7 @@
 	template <class TYPE>
 	sal_Bool isAReference(const staruno::Type& _rType, TYPE* pDummy)
 	{
-		return  _rType.equals(::getCppuType(reinterpret_cast<staruno::Reference<TYPE>*>(NULL)));
+		return  _rType.equals(getCppuType(reinterpret_cast<staruno::Reference<TYPE>*>(NULL)));
 	}
 
 	//-------------------------------------------------------------------------
@@ -161,7 +161,7 @@
 	template <class TYPE>
 	sal_Bool isAReference(const staruno::Any& _rVal, TYPE* pDummy)
 	{
-		return  _rVal.getValueType().equals(::getCppuType(reinterpret_cast<staruno::Reference<TYPE>*>(NULL)));
+		return  _rVal.getValueType().equals(getCppuType(reinterpret_cast<staruno::Reference<TYPE>*>(NULL)));
 	}
 
 	//-------------------------------------------------------------------------
@@ -182,7 +182,7 @@
 	sal_Bool getImplementation(TYPE*& _pObject, const ::com::sun::star::uno::Reference< ::com::sun::star::uno::XInterface >& _rxIFace)
 	{
 		_pObject = NULL;
-		::com::sun::star::uno::Reference< ::com::sun::star::lang::XUnoTunnel > xTunnel(_rxIFace, UNO_QUERY);
+		::com::sun::star::uno::Reference< ::com::sun::star::lang::XUnoTunnel > xTunnel(_rxIFace, staruno::UNO_QUERY);
 		if (xTunnel.is())
 			_pObject = reinterpret_cast< TYPE* >(xTunnel->getSomething(TYPE::getUnoTunnelImplementationId()));
 
Index: inc/comphelper/uno3.hxx
===================================================================
RCS file: /cvs/util/comphelper/inc/comphelper/uno3.hxx,v
retrieving revision 1.5
diff -u -r1.5 uno3.hxx
--- inc/comphelper/uno3.hxx	23 Apr 2002 11:06:59 -0000	1.5
+++ inc/comphelper/uno3.hxx	23 Oct 2005 16:58:38 -0000
@@ -206,7 +206,7 @@
 		_rxOut = static_cast<iface*>(NULL);
 		if (_rxAggregate.is())
 		{
-			::com::sun::star::uno::Any aCheck = _rxAggregate->queryAggregation(::getCppuType((::com::sun::star::uno::Reference<iface>*)NULL));
+			::com::sun::star::uno::Any aCheck = _rxAggregate->queryAggregation(iface::static_type());
 			if (aCheck.hasValue())
 				_rxOut = *(::com::sun::star::uno::Reference<iface>*)aCheck.getValue();
 		}
@@ -225,7 +225,7 @@
 		_rxOut = static_cast<iface*>(NULL);
 		if (_rxObject.is())
 		{
-			::com::sun::star::uno::Any aCheck = _rxObject->queryInterface(::getCppuType((::com::sun::star::uno::Reference<iface>*)NULL));
+			::com::sun::star::uno::Any aCheck = _rxObject->queryInterface(iface::static_type());
 			if(aCheck.hasValue())
 			{
 				_rxOut = *(::com::sun::star::uno::Reference<iface>*)aCheck.getValue();
