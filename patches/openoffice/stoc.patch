Index: source/corereflection/lrucache.hxx
===================================================================
RCS file: /cvs/udk/stoc/source/corereflection/lrucache.hxx,v
retrieving revision 1.2
diff -u -r1.2 lrucache.hxx
--- source/corereflection/lrucache.hxx	23 Nov 2000 01:55:21 -0000	1.2
+++ source/corereflection/lrucache.hxx	27 Sep 2005 05:26:44 -0000
@@ -189,7 +189,7 @@
 inline sal_Bool LRU_Cache< t_Key, t_Val, t_KeyHash, t_KeyEqual >::hasValue( const t_Key & rKey ) const
 {
 	::osl::MutexGuard aGuard( _aCacheMutex );
-	const t_Key2Element::const_iterator iFind( _aKey2Element.find( rKey ) );
+	const typename t_Key2Element::const_iterator iFind( _aKey2Element.find( rKey ) );
 	return (iFind != _aKey2Element.end());
 }
 //__________________________________________________________________________________________________
@@ -197,7 +197,7 @@
 inline t_Val LRU_Cache< t_Key, t_Val, t_KeyHash, t_KeyEqual >::getValue( const t_Key & rKey ) const
 {
 	::osl::MutexGuard aGuard( _aCacheMutex );
-	const t_Key2Element::const_iterator iFind( _aKey2Element.find( rKey ) );
+	const typename t_Key2Element::const_iterator iFind( _aKey2Element.find( rKey ) );
 	if (iFind != _aKey2Element.end())
 	{
 		CacheEntry * pEntry = (*iFind).second;
@@ -219,7 +219,7 @@
 	if (_nCachedElements > 0)
 	{
 		::osl::MutexGuard aGuard( _aCacheMutex );
-		const t_Key2Element::const_iterator iFind( _aKey2Element.find( rKey ) );
+		const typename t_Key2Element::const_iterator iFind( _aKey2Element.find( rKey ) );
 		
 		CacheEntry * pEntry;
 		if (iFind == _aKey2Element.end())
Index: source/defaultregistry/defaultregistry.cxx
===================================================================
RCS file: /cvs/udk/stoc/source/defaultregistry/defaultregistry.cxx,v
retrieving revision 1.7
diff -u -r1.7 defaultregistry.cxx
--- source/defaultregistry/defaultregistry.cxx	7 Dec 2001 15:37:29 -0000	1.7
+++ source/defaultregistry/defaultregistry.cxx	27 Sep 2005 05:26:45 -0000
@@ -183,7 +183,7 @@
     virtual Type SAL_CALL getElementType(  ) throw (RuntimeException);
     virtual sal_Bool SAL_CALL hasElements(  ) throw (RuntimeException);
 
-	friend NestedKeyImpl;
+	friend class NestedKeyImpl;
 protected:
 	Mutex						m_mutex;
 	sal_uInt32					m_state;
Index: source/security/lru_cache.h
===================================================================
RCS file: /cvs/udk/stoc/source/security/lru_cache.h,v
retrieving revision 1.1
diff -u -r1.1 lru_cache.h
--- source/security/lru_cache.h	4 Mar 2002 17:43:21 -0000	1.1
+++ source/security/lru_cache.h	27 Sep 2005 05:26:45 -0000
@@ -214,7 +214,7 @@
 inline bool lru_cache< t_key, t_val, t_hashKey, t_equalKey >::has(
     t_key const & key ) const SAL_THROW( () )
 {
-    t_key2element::const_iterator const iFind( m_key2element.find( key ) );
+    typename t_key2element::const_iterator const iFind( m_key2element.find( key ) );
     return (iFind != m_key2element.end());
 }
 //__________________________________________________________________________________________________
@@ -224,7 +224,7 @@
 {
     if (0 < m_size)
     {
-        t_key2element::const_iterator const iFind( m_key2element.find( key ) );
+        typename t_key2element::const_iterator const iFind( m_key2element.find( key ) );
         if (iFind != m_key2element.end())
         {
             Entry * entry = iFind->second;
@@ -250,7 +250,7 @@
 {
     if (0 < m_size)
     {
-        t_key2element::const_iterator const iFind( m_key2element.find( key ) );
+        typename t_key2element::const_iterator const iFind( m_key2element.find( key ) );
         
         Entry * entry;
         if (iFind == m_key2element.end())
@@ -270,8 +270,8 @@
 #endif
             m_key2element.erase( entry->m_key );
             entry->m_key = key;
-            ::std::pair< t_key2element::iterator, bool > insertion(
-                m_key2element.insert( t_key2element::value_type( key, entry ) ) );
+            ::std::pair< typename t_key2element::iterator, bool > insertion(
+                m_key2element.insert( typename t_key2element::value_type( key, entry ) ) );
 #ifdef __CACHE_DIAGNOSE
             OSL_ENSURE( insertion.second, "### inserting new cache entry failed?!" );
 #endif
Index: source/simpleregistry/simpleregistry.cxx
===================================================================
RCS file: /cvs/udk/stoc/source/simpleregistry/simpleregistry.cxx,v
retrieving revision 1.9
diff -u -r1.9 simpleregistry.cxx
--- source/simpleregistry/simpleregistry.cxx	21 Oct 2002 15:26:05 -0000	1.9
+++ source/simpleregistry/simpleregistry.cxx	27 Sep 2005 05:26:46 -0000
@@ -175,7 +175,7 @@
     virtual sal_Bool SAL_CALL isReadOnly(  ) throw(InvalidRegistryException, RuntimeException);
     virtual void SAL_CALL mergeKey( const OUString& aKeyName, const OUString& aUrl ) throw(InvalidRegistryException, MergeConflictException, RuntimeException);
 
-	friend RegistryKeyImpl;
+	friend class RegistryKeyImpl;
 protected:
 	Mutex		m_mutex;
 	OUString 	m_url;
Index: source/tdmanager/lrucache.hxx
===================================================================
RCS file: /cvs/udk/stoc/source/tdmanager/lrucache.hxx,v
retrieving revision 1.3
diff -u -r1.3 lrucache.hxx
--- source/tdmanager/lrucache.hxx	10 May 2001 14:35:25 -0000	1.3
+++ source/tdmanager/lrucache.hxx	27 Sep 2005 05:26:46 -0000
@@ -191,7 +191,7 @@
     t_Key const & rKey ) const
 {
 	::osl::MutexGuard aGuard( _aCacheMutex );
-	t_Key2Element::const_iterator const iFind( _aKey2Element.find( rKey ) );
+	typename t_Key2Element::const_iterator const iFind( _aKey2Element.find( rKey ) );
 	return (iFind != _aKey2Element.end());
 }
 //__________________________________________________________________________________________________
@@ -200,7 +200,7 @@
     t_Key const & rKey ) const
 {
 	::osl::MutexGuard aGuard( _aCacheMutex );
-	const t_Key2Element::const_iterator iFind( _aKey2Element.find( rKey ) );
+	const typename t_Key2Element::const_iterator iFind( _aKey2Element.find( rKey ) );
 	if (iFind != _aKey2Element.end())
 	{
 		CacheEntry * pEntry = (*iFind).second;
@@ -222,7 +222,7 @@
 	if (_nCachedElements > 0)
 	{
 		::osl::MutexGuard aGuard( _aCacheMutex );
-		t_Key2Element::const_iterator const iFind( _aKey2Element.find( rKey ) );
+		typename t_Key2Element::const_iterator const iFind( _aKey2Element.find( rKey ) );
 		
 		CacheEntry * pEntry;
 		if (iFind == _aKey2Element.end())
Index: source/tdmanager/tdmgr.cxx
===================================================================
RCS file: /cvs/udk/stoc/source/tdmanager/tdmgr.cxx,v
retrieving revision 1.13
diff -u -r1.13 tdmgr.cxx
--- source/tdmanager/tdmgr.cxx	11 Nov 2002 08:33:38 -0000	1.13
+++ source/tdmanager/tdmgr.cxx	27 Sep 2005 05:26:47 -0000
@@ -199,8 +199,8 @@
                                        XTypeDescriptionEnumerationAccess,
                                        XInitialization >
 {
-	friend EnumerationImpl;
-	friend EventListenerImpl;
+	friend class EnumerationImpl;
+	friend class EventListenerImpl;
 
 	Mutex								_aComponentMutex;
 	Reference< XComponentContext >      _xContext;
