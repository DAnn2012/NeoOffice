--- source/aqua/DataFlavorMapping.hxx	2008-04-11 00:20:19.000000000 -0700
+++ source/aqua/DataFlavorMapping.hxx	2012-07-11 21:43:17.000000000 -0700
@@ -125,7 +125,7 @@
 
   /* Returns an NSArray containing all pasteboard types supported by OOo
    */
-  NSArray* DataFlavorMapper::getAllSupportedPboardTypes() const;
+  NSArray* getAllSupportedPboardTypes() const;
 
 private:
   /* Determines if the provided Mime content type is valid.
--- source/aqua/PictToBmpFlt.cxx	2007-07-05 02:10:56.000000000 -0700
+++ source/aqua/PictToBmpFlt.cxx	2014-04-27 15:23:46.000000000 -0700
@@ -8,10 +8,12 @@
 #undef DEPRECATED_ATTRIBUTE
 #define DEPRECATED_ATTRIBUTE 
 
+#if SUPD != 310
 #include <premac.h>
 #include <Carbon/Carbon.h>
 #include <QuickTime/QuickTime.h>
 #include <postmac.h>
+#endif	// SUPD != 310
 
 
 bool PICTtoBMP(com::sun::star::uno::Sequence<sal_Int8>& aPict, 
@@ -19,6 +21,7 @@
 {
   bool result = false;
 
+#if SUPD != 310
   ComponentInstance bmpExporter;
   if (OpenADefaultComponent(GraphicsExporterComponentType,
 							kQTFileTypeBMP,
@@ -58,6 +61,7 @@
   DisposeHandle(hPict);
   DisposeHandle(hBmp);
   CloseComponent(bmpExporter);
+#endif	// SUPD != 310
 
   return result;
 }
@@ -67,6 +71,7 @@
 {
   bool result = false;
 
+#if SUPD != 310
   Handle hBmp;
   ComponentInstance pictExporter;
   if ((PtrToHand(aBmp.getArray(), &hBmp, aBmp.getLength()) != noErr)) 
@@ -109,6 +114,7 @@
   
   DisposeHandle(hBmp);
   CloseComponent(pictExporter);
+#endif	// SUPD != 310
   
   return result;
 }
--- source/aqua/DropTarget.cxx	2014-04-27 11:24:36.000000000 -0700
+++ source/aqua/DropTarget.cxx	2014-04-27 15:25:20.000000000 -0700
@@ -49,9 +49,11 @@
 #include <rtl/ustring.h>
 #include <stdio.h>
 
+#if SUPD != 310
 #include <premac.h>
 #include <Carbon/Carbon.h>
 #include <postmac.h>
+#endif	// SUPD != 310
 
 
 using namespace rtl;
@@ -308,12 +310,14 @@
   // Weird but it appears as if there is no method in Cocoa
   // to create a kThemeCopyArrowCursor hence we have to use
   // Carbon to do it
+#if SUPD != 310
   if (dragOp == NSDragOperationNone)
 	SetThemeCursor(kThemeNotAllowedCursor);
   else if (dragOp == NSDragOperationCopy)
     SetThemeCursor(kThemeCopyArrowCursor);
   else 
 	SetThemeCursor(kThemeArrowCursor);
+#endif	// SUPD != 310
 
   return dragOp;
 }
@@ -325,7 +329,9 @@
 	fire_dragExit(dte);
 	mDragSourceSupportedActions = DNDConstants::ACTION_NONE;
 	mSelectedDropAction = DNDConstants::ACTION_NONE;
+#if SUPD != 310
 	SetThemeCursor(kThemeArrowCursor);
+#endif	// SUPD != 310
   }
 
 
@@ -379,7 +385,9 @@
 	mDragSourceSupportedActions = DNDConstants::ACTION_NONE;
 	mSelectedDropAction = DNDConstants::ACTION_NONE;
 	mXCurrentDragClipboard = Reference<XClipboard>();
+#if SUPD != 310
 	SetThemeCursor(kThemeArrowCursor);
+#endif	// SUPD != 310
   }
 
 
