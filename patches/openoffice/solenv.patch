--- inc/unxmacx.mk	2011-02-01 08:54:38.000000000 -0800
+++ inc/unxmacx.mk	2011-02-01 18:40:49.000000000 -0800
@@ -51,9 +51,12 @@
 .IF "$(GUIBASE)"=="unx" && "$(USE_SYSTEM_STL)"!="YES"
 CDEFS+=-DX_LOCALE
 .ENDIF
-.IF "$(GUIBASE)"=="aqua"
+.IF "$(GUIBASE)"=="aqua" || "$(GUIBASE)"=="java"
 # TODO: use MACOSX_DEPLOYMENT_TARGET instead of MAC_OS_X_VERSION_MIN_REQUIRED?
-CDEFS+=-DQUARTZ -DMAC_OS_X_VERSION_MIN_REQUIRED=1040
+CDEFS+=-DQUARTZ -DMAC_OS_X_VERSION_MIN_REQUIRED=1080
+.ENDIF
+.IF "$(GUIBASE)"=="java"
+CDEFS+=-DUSE_JAVA
 .ENDIF
 
 # Name of library where static data members are initialized
@@ -116,7 +116,7 @@
 CFLAGS_NO_EXCEPTIONS=-fno-exceptions
 
 # Normal C++ compilation flags
-CFLAGSCXX=-pipe -malign-natural -fsigned-char -Wno-long-double $(ARCH_FLAGS)
+CFLAGSCXX=-pipe -malign-natural -fsigned-char $(ARCH_FLAGS)
 CFLAGSCXX+= -Wno-ctor-dtor-privacy
 
 PICSWITCH:=-fPIC
@@ -259,11 +259,11 @@
 STDOBJCUI=
 STDSLOCUI=
 
-.IF "$(GUIBASE)" == "aqua"
+.IF "$(GUIBASE)" == "aqua" || "$(GUIBASE)" == "java"
 	STDLIBCUIMT=CPPRUNTIME -lm
-	STDLIBGUIMT=-framework Carbon -framework Cocoa -lpthread CPPRUNTIME -lm
+	STDLIBGUIMT=-framework AppKit -lpthread CPPRUNTIME -lm
 	STDSHLCUIMT=-lpthread CPPRUNTIME -lm
-	STDSHLGUIMT=-framework Carbon -framework CoreFoundation -framework Cocoa -lpthread CPPRUNTIME -lm
+	STDSHLGUIMT=-framework AppKit -lpthread CPPRUNTIME -lm
 	PSPLIB=-lpsp
 .ELSE
 	STDLIBCUIMT= CPPRUNTIME -lm
--- bin/deliver.pl	2011-08-08 12:06:01.445046400 -0700
+++ bin/deliver.pl	2011-08-09 13:14:56.864985600 -0700
@@ -114,7 +114,15 @@
 if ($^O ne 'cygwin') {              # iz59477 - cygwin needes a dot "." at the end of filenames to disable
   $maybedot     = '';               # some .exe transformation magic.
 } else {
-  $maybedot     = '.';
+    my $cygvernum = `uname -r`;
+    my @cygvernum = split( /\./, $cygvernum);
+    $cygvernum = shift @cygvernum;
+    $cygvernum .= shift @cygvernum;
+    if ( $cygvernum < 17 ) {
+        $maybedot     = '.';
+    } else {
+        $maybedot     = '';               # no longer works with cygwin 1.7. other magic below.
+    }
 }
 
 ($gui		= lc($ENV{GUI})) 		|| die "Can't determine 'GUI'. Please set environment.\n";
--- bin/modules/macosxotoolhelper.pm	2013-05-20 21:23:36.000000000 -0700
+++ bin/modules/macosxotoolhelper.pm	2013-05-20 21:23:43.000000000 -0700
@@ -39,7 +39,7 @@
     my $call = "otool -D $file";
     open(IN, "-|", $call) or die "cannot $call";
     my $line = <IN>;
-    $line =~ /^$file:\n$/ or
+    $line =~ m%^\Q$file\E:\n$% or
         die "unexpected otool -D output (\"$line\", expecting \"$file:\")";
     $line = <IN> or die "unexpected otool -D output";
     <IN> == undef or die "unexpected otool -D output";
--- inc/unxmacx.mk	2012-07-12 17:34:08.000000000 -0700
+++ inc/unxmacx.mk	2012-09-24 11:26:52.000000000 -0700
@@ -70,7 +70,7 @@
 
 
 # MacOS X specific Java compilation/link flags
-SOLAR_JAVA*=TRUE
+SOLAR_JAVA*=
 .IF "$(SOLAR_JAVA)"!=""
 	JAVADEF=-DSOLAR_JAVA
 	JAVAFLAGSDEBUG=-g
--- bin/macosx-create-bundle	2008-04-10 09:50:40.000000000 -0700
+++ bin/macosx-create-bundle	2014-04-21 08:20:25.000000000 -0700
@@ -84,12 +84,12 @@
 	filetype=`file -L "$inputfile"`
 
 	# Create bundle based on file type
-	if printf "$filetype" | grep -q 'Mach-O executable'; then
+	if printf "$filetype" | grep -q 'Mach-O 64-bit executable'; then
 
 		# Do nothing as this step is obsolete
         :
 
-	elif printf "$filetype" | grep -q 'Mach-O dynamically linked shared library'; then
+	elif printf "$filetype" | grep -q 'Mach-O 64-bit dynamically linked shared library'; then
 		# Screen out lib\w+static libraries as they are not used directly
 		if ! printf "$inputfilename" | grep -q -x -E 'lib\w+static.*\.dylib'; then
 			# Create jnilib link
--- inc/rules.mk	2014-10-03 15:39:33.000000000 -0700
+++ inc/rules.mk	2014-10-03 15:49:34.000000000 -0700
@@ -884,5 +884,5 @@
 # dirty hack
 # if local *.sdf file is missing
 %.sdf:
-    echo > $@
+	$(TOUCH) $@
 
