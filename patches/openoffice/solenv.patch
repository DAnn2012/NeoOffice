--- inc/unxmacx.mk	2011-02-01 08:54:38.000000000 -0800
+++ inc/unxmacx.mk	2011-02-01 18:40:49.000000000 -0800
@@ -51,9 +51,12 @@
 .IF "$(GUIBASE)"=="unx" && "$(USE_SYSTEM_STL)"!="YES"
 CDEFS+=-DX_LOCALE
 .ENDIF
-.IF "$(GUIBASE)"=="aqua"
+.IF "$(GUIBASE)"=="aqua" || "$(GUIBASE)"=="java"
 # TODO: use MACOSX_DEPLOYMENT_TARGET instead of MAC_OS_X_VERSION_MIN_REQUIRED?
-CDEFS+=-DQUARTZ -DMAC_OS_X_VERSION_MIN_REQUIRED=1040
+CDEFS+=-DQUARTZ -DMAC_OS_X_VERSION_MIN_REQUIRED=1050
+.ENDIF
+.IF "$(GUIBASE)"=="java"
+CDEFS+=-DUSE_JAVA
 .ENDIF
 
 # Name of library where static data members are initialized
@@ -116,7 +116,11 @@
 CFLAGS_NO_EXCEPTIONS=-fno-exceptions
 
 # Normal C++ compilation flags
+.IF "$(BUILD_OS_MAJOR)"=="10" && "$(BUILD_OS_MINOR)"=="5"
 CFLAGSCXX=-pipe -malign-natural -fsigned-char -Wno-long-double $(ARCH_FLAGS)
+.ELSE		# "$(BUILD_OS_MAJOR)"=="10" && "$(BUILD_OS_MINOR)"=="5"
+CFLAGSCXX=-pipe -malign-natural -fsigned-char $(ARCH_FLAGS)
+.ENDIF		# "$(BUILD_OS_MAJOR)"=="10" && "$(BUILD_OS_MINOR)"=="5"
 CFLAGSCXX+= -Wno-ctor-dtor-privacy
 
 PICSWITCH:=-fPIC
@@ -259,11 +262,11 @@
 STDOBJCUI=
 STDSLOCUI=
 
-.IF "$(GUIBASE)" == "aqua"
+.IF "$(GUIBASE)" == "aqua" || "$(GUIBASE)" == "java"
 	STDLIBCUIMT=CPPRUNTIME -lm
-	STDLIBGUIMT=-framework Carbon -framework Cocoa -lpthread CPPRUNTIME -lm
+	STDLIBGUIMT=-framework AppKit -lpthread CPPRUNTIME -lm
 	STDSHLCUIMT=-lpthread CPPRUNTIME -lm
-	STDSHLGUIMT=-framework Carbon -framework CoreFoundation -framework Cocoa -lpthread CPPRUNTIME -lm
+	STDSHLGUIMT=-framework AppKit -lpthread CPPRUNTIME -lm
 	PSPLIB=-lpsp
 .ELSE
 	STDLIBCUIMT= CPPRUNTIME -lm
--- bin/deliver.pl	2011-08-08 12:06:01.445046400 -0700
+++ bin/deliver.pl	2011-08-09 13:14:56.864985600 -0700
@@ -114,7 +114,15 @@
 if ($^O ne 'cygwin') {              # iz59477 - cygwin needes a dot "." at the end of filenames to disable
   $maybedot     = '';               # some .exe transformation magic.
 } else {
-  $maybedot     = '.';
+    my $cygvernum = `uname -r`;
+    my @cygvernum = split( /\./, $cygvernum);
+    $cygvernum = shift @cygvernum;
+    $cygvernum .= shift @cygvernum;
+    if ( $cygvernum < 17 ) {
+        $maybedot     = '.';
+    } else {
+        $maybedot     = '';               # no longer works with cygwin 1.7. other magic below.
+    }
 }
 
 ($gui		= lc($ENV{GUI})) 		|| die "Can't determine 'GUI'. Please set environment.\n";
--- bin/modules/installer/simplepackage.pm	2012-07-12 17:33:28.000000000 -0700
+++ bin/modules/installer/simplepackage.pm	2012-09-29 17:07:58.000000000 -0700
@@ -69,106 +69,7 @@
 
 sub register_extensions
 {
-	my ($officedir, $languagestringref) = @_;
-
-	my $programdir = $officedir . $installer::globals::separator;
-	# if ( $installer::globals::sundirhostname ne "" ) { $programdir = $programdir . $installer::globals::sundirhostname . $installer::globals::separator; }
-	if ( $installer::globals::officedirhostname ne "" ) { $programdir = $programdir . $installer::globals::officedirhostname . $installer::globals::separator; }
-	$programdir = $programdir . "program";
-	
-	my $from = cwd();
-	chdir($programdir);		
-
-	my $infoline = "";
-
-	# my $unopkgfile = $officedir . $installer::globals::separator . "program" . 
-	#				$installer::globals::separator . $installer::globals::unopkgfile;
-
-	my $unopkgfile = $installer::globals::unopkgfile;
-
-	# unset any LIBRARY_PATH variable
-	my $dyld_library_path = delete $ENV{ 'DYLD_LIBRARY_PATH'};
-	my $ld_library_path = delete $ENV{ 'LD_LIBRARY_PATH'};
-	my $library_path = delete $ENV{ 'LIBRARY_PATH'};
-
-	# my $extensiondir = $officedir . $installer::globals::separator . "share" .
-	#			$installer::globals::separator . "extension" .
-	#			$installer::globals::separator . "install";
-
-	my $extensiondir = ".." . $installer::globals::separator . "share" . $installer::globals::separator . "extension" . $installer::globals::separator . "install";
-				
-	my $allextensions = installer::systemactions::find_file_with_file_extension("oxt", $extensiondir);	
-
-	if ( $#{$allextensions} > -1)
-	{
-		my $currentdir = cwd();
-		print "... current dir: $currentdir ...\n";
-		$infoline = "Current dir: $currentdir\n";
-		push( @installer::globals::logfileinfo, $infoline);
-
-		for ( my $i = 0; $i <= $#{$allextensions}; $i++ )
-		{
-			my $oneextension = $extensiondir . $installer::globals::separator . ${$allextensions}[$i];
-			
-			# my $systemcall = $unopkgfile . " add --shared " . "\"" . $oneextension . "\"";
-			
-			if ( ! -f $unopkgfile ) { installer::exiter::exit_program("ERROR: $unopkgfile not found!", "register_extensions"); }
-			if ( ! -f $oneextension ) { installer::exiter::exit_program("ERROR: $oneextension not found!", "register_extensions"); }
-			
-			my $localtemppath = installer::systemactions::create_directories( "uno", $languagestringref);
-			if ( $installer::globals::iswindowsbuild )
-			{
-                if (( $^O =~ /cygwin/i ) && ( $ENV{'USE_SHELL'} ne "4nt" ))
-                {
-                    $localtemppath = $installer::globals::cyg_temppath;
-                }
-                else
-                {
-		    		$windowsslash = "\/";
-                }
-                $localtemppath =~ s/\\/\//g;
-                $localtemppath = "/".$localtemppath;
-			}
-			my $systemcall = "JFW_PLUGIN_DO_NOT_CHECK_ACCESSIBILITY=1 " . $unopkgfile . " add --shared --verbose " . $oneextension . " -env:UserInstallation=file://" . $localtemppath . " 2\>\&1 |";
-
-			print "... $systemcall ...\n";
-
-			$infoline = "Systemcall: $systemcall\n";
-			push( @installer::globals::logfileinfo, $infoline);
-
-			my @unopkgoutput = ();
-
-			open (UNOPKG, $systemcall);
-			while (<UNOPKG>) {push(@unopkgoutput, $_); }
-			close (UNOPKG);
-
-			my $returnvalue = $?;	# $? contains the return value of the systemcall
-
-			if ($returnvalue)
-			{
-				$infoline = "ERROR: Could not execute \"$systemcall\"!\nExitcode: '$returnvalue'\n";
-				push( @installer::globals::logfileinfo, $infoline);	
-				for ( my $j = 0; $j <= $#unopkgoutput; $j++ ) { push( @installer::globals::logfileinfo, "$unopkgoutput[$j]"); }
-				installer::exiter::exit_program("ERROR: $systemcall failed!", "register_extensions");
-			}
-			else
-			{
-				$infoline = "Success: Executed \"$systemcall\" successfully!\n";
-				push( @installer::globals::logfileinfo, $infoline);
-			}
-		}
-	}
-	else
-	{
-		$infoline = "No extensions located in directory $extensiondir.\n";
-		push( @installer::globals::logfileinfo, $infoline);
-	}
-
-    $ENV{'LIBRARY_PATH'} = $library_path if defined $library_path;
-    $ENV{'LD_LIBRARY_PATH'} = $ld_library_path if defined $ld_library_path;
-    $ENV{'DYLD_LIBRARY_PATH'} = $dyld_library_path if defined $dyld_library_path;
-
-	chdir($from);
+	# [ed] Removed due to errors invoking unopkg after removing JFW_PLUGIN_DO_NOT_CHECK_ACCESSIBILITY=1 from bogus system command
 }
 
 #############################################
--- inc/unxmacx.mk	2012-07-12 17:34:08.000000000 -0700
+++ inc/unxmacx.mk	2012-09-24 11:26:52.000000000 -0700
@@ -70,7 +70,7 @@
 
 
 # MacOS X specific Java compilation/link flags
-SOLAR_JAVA*=TRUE
+SOLAR_JAVA*=
 .IF "$(SOLAR_JAVA)"!=""
 	JAVADEF=-DSOLAR_JAVA
 	JAVAFLAGSDEBUG=-g
