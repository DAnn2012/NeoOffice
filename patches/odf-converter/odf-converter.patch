Index: source/Spreadsheet/Converter/OoxMaximumCellTextPostProcessor.cs
===================================================================
--- source/Spreadsheet/Converter/OoxMaximumCellTextPostProcessor.cs	2008-01-11 16:27:26.000000000 -0800
+++ source/Spreadsheet/Converter/OoxMaximumCellTextPostProcessor.cs	2008-01-16 12:38:04.000000000 -0800
@@ -170,10 +170,8 @@
             else if (isInMaxLength)
             {
                     this.isAtribute = false;
-                    if (this.totalStringLength < MAX_CELL_TEXT_LENGTH)
-                    {
-                        this.nextWriter.WriteEndAttribute();
-                    }
+                    // Fix bug described at http://bugzilla.neooffice.org/bug.php?op=show&bugid=2794&pos=5 using the fix described at https://bugzilla.novell.com/show_bug.cgi?id=332246
+                    this.nextWriter.WriteEndAttribute();
             }
             else
             {
Index: source/Spreadsheet/Converter/OOXStyleCellPostProcessor.cs
===================================================================
--- source/Spreadsheet/Converter/OOXStyleCellPostProcessor.cs	(revision 4259)
+++ source/Spreadsheet/Converter/OOXStyleCellPostProcessor.cs	(working copy)
@@ -139,6 +139,8 @@
             else if (this.changeCellName)
             {
                 this.changeCellName = false;
+				// Fix bug described at http://bugzilla.neooffice.org/bug.php?op=show&bugid=2794&pos=5 using the fix described at https://bugzilla.novell.com/show_bug.cgi?id=332246
+				this.nextWriter.WriteEndAttribute();
             }
             else
             {
Index: source/Spreadsheet/Converter/resources/odf2oox/sharedStrings.xsl
===================================================================
--- source/Spreadsheet/Converter/resources/odf2oox/sharedStrings.xsl	2008-04-15 17:02:00.000000000 -0700
+++ source/Spreadsheet/Converter/resources/odf2oox/sharedStrings.xsl	2008-04-15 17:04:11.000000000 -0700
@@ -78,10 +78,7 @@
       select="document('content.xml')/office:document-content/office:body/office:spreadsheet/descendant::table:table-cell[text:p and not(@office:value-type='float') and (@office:value-type='string' or @office:value-type='boolean' or not((number(text:p) or text:p = 0 or contains(text:p,',') or contains(text:p,'%') or @office:value-type='currency' or @office:value-type='date' or @office:value-type='time')))]
       ">
       <si>
-        <!--Disable the maxlength postprocessor as it is severly broken when
-            using Mono as found in the following bug:
-            http://bugzilla.neooffice.org/bug.php?op=show&bugid=2905
-        <pxsi:maxlength xmlns:pxsi="urn:cleverage:xmlns:post-processings:cellText">-->
+        <pxsi:maxlength xmlns:pxsi="urn:cleverage:xmlns:post-processings:cellText">        
           <xsl:choose>
             <!--RefNo-2:Added |text:p//text:a condition-->
             <xsl:when test="text:span|text:p/text:span|text:p//text:a">
@@ -91,7 +88,7 @@
               <t xml:space="preserve"><xsl:apply-templates mode="text" select="text:p"/></t>
             </xsl:otherwise>
           </xsl:choose>
-        <!--</pxsi:maxlength>-->
+        </pxsi:maxlength>
       </si>
     </xsl:for-each>
   </xsl:template>
@@ -208,7 +205,7 @@
         <xsl:value-of select="."/>
       </xsl:variable>
       <!-- caution with 'Enters' because they can result with additional space in output text -->
-      <xsl:choose>
+      <t xml:space="preserve"><xsl:choose>
         <xsl:when test="not(contains($value, '_x'))"><xsl:value-of select="$value"/></xsl:when>
         <xsl:otherwise>
           <xsl:call-template name="HexaDecimalValue">
@@ -217,7 +214,7 @@
             </xsl:with-param>
           </xsl:call-template>
         </xsl:otherwise>
-      </xsl:choose>
+      </xsl:choose></t>
     </r>
   </xsl:template>
 
@@ -236,12 +233,12 @@
     </xsl:variable>
     <xsl:choose>
       <xsl:when test="not(contains($value, '_x'))">
-        <t xml:space="preserve"><xsl:value-of select="$value"/></t>
+        <xsl:value-of select="$value"/>
       </xsl:when>
       <xsl:otherwise>
         <xsl:call-template name="HexaDecimalValue">
           <xsl:with-param name="value">
-            <t xml:space="preserve"><xsl:value-of select="$value"/></t>
+            <xsl:value-of select="$value"/>
           </xsl:with-param>
         </xsl:call-template>
           </xsl:otherwise>
Index: source/Word/Converter/OoxChangeTrackingPostProcessor.cs
===================================================================
--- source/Word/Converter/OoxChangeTrackingPostProcessor.cs	2008-01-10 18:34:37.000000000 -0800
+++ source/Word/Converter/OoxChangeTrackingPostProcessor.cs	2008-01-10 18:48:40.000000000 -0800
@@ -757,18 +757,22 @@
             Stack tmp = new Stack();
             Element element = (Element)this.currentNode.Peek();
             string id = element.GetAttributeValue("id", PCT_NAMESPACE);
-            Element region = (Element)this.currentInsertionRegion.Pop();
-            while (!id.Equals(region.GetAttributeValue("id", PCT_NAMESPACE)))
-            {
-                tmp.Push(region);
-                region = (Element)this.currentInsertionRegion.Pop();
-            }
-            while (tmp.Count > 0)
+            // Fix bug 1863275 by detecting if the stack is empty
+            if (this.currentInsertionRegion.Count > 0)
             {
-                this.currentInsertionRegion.Push(tmp.Pop());
+                Element region = (Element)this.currentInsertionRegion.Pop();
+                while (!id.Equals(region.GetAttributeValue("id", PCT_NAMESPACE)))
+                {
+                    tmp.Push(region);
+                    region = (Element)this.currentInsertionRegion.Pop();
+                }
+                while (tmp.Count > 0)
+                {
+                    this.currentInsertionRegion.Push(tmp.Pop());
+                }
+                // save the last region in case we need it before closing a paragraph
+                this.lastInsertionRegion = region;
             }
-            // save the last region in case we need it before closing a paragraph
-            this.lastInsertionRegion = region;
         }
 
 
Index: source/Common/OdfConverterLib/OdfCharactersPostProcessor.cs
===================================================================
--- source/Common/OdfConverterLib/OdfCharactersPostProcessor.cs	2008-04-15 17:12:39.000000000 -0700
+++ source/Common/OdfConverterLib/OdfCharactersPostProcessor.cs	2008-04-15 17:09:35.000000000 -0700
@@ -873,14 +873,22 @@
             zipResolverObj.Dispose();
             zipobj.Close();
 
-            string[] arrValues = new string[3];
-            arrValues = widht_height_res.Split(':');
-            double width = Double.Parse(arrValues[0].ToString(), System.Globalization.CultureInfo.InvariantCulture);
-            double height = Double.Parse(arrValues[1].ToString(), System.Globalization.CultureInfo.InvariantCulture);
-            double res = Double.Parse(arrValues[2].ToString(), System.Globalization.CultureInfo.InvariantCulture);
+            double cx = 2.54 / 72;
+            double cy = 2.54 / 72;
+            try
+            {
+                string[] arrValues = new string[3];
+                arrValues = widht_height_res.Split(':');
+                double width = Double.Parse(arrValues[0].ToString(), System.Globalization.CultureInfo.InvariantCulture);
+                double height = Double.Parse(arrValues[1].ToString(), System.Globalization.CultureInfo.InvariantCulture);
+                double res = Double.Parse(arrValues[2].ToString(), System.Globalization.CultureInfo.InvariantCulture);
 
-            double cx = width * 2.54 / res;
-            double cy = height * 2.54 / res;
+                cx = width * 2.54 / res;
+                cy = height * 2.54 / res;
+            }
+            catch (Exception ex)
+            {
+            }
 
             double odpLeft = left * cx / 100000;
             double odpRight = right * cx / 100000;
Index: source/Common/OdfConverterLib/OoxCharactersPostProcessor.cs
===================================================================
--- source/Common/OdfConverterLib/OoxCharactersPostProcessor.cs	2008-04-15 17:18:07.000000000 -0700
+++ source/Common/OdfConverterLib/OoxCharactersPostProcessor.cs	2008-04-15 17:14:16.000000000 -0700
@@ -705,14 +705,22 @@
             zipobj.Close();
 
 
-            string[] arrValues = new string[3];
-            arrValues = widht_height_res.Split(':');
-            double width = Double.Parse(arrValues[0].ToString(), System.Globalization.CultureInfo.InvariantCulture);
-            double height = Double.Parse(arrValues[1].ToString(), System.Globalization.CultureInfo.InvariantCulture);
-            double res = Double.Parse(arrValues[2].ToString(), System.Globalization.CultureInfo.InvariantCulture);
+            double cx = 2.54 / 72;
+            double cy = 2.54 / 72;
+            try
+            {
+                string[] arrValues = new string[3];
+                arrValues = widht_height_res.Split(':');
+                double width = Double.Parse(arrValues[0].ToString(), System.Globalization.CultureInfo.InvariantCulture);
+                double height = Double.Parse(arrValues[1].ToString(), System.Globalization.CultureInfo.InvariantCulture);
+                double res = Double.Parse(arrValues[2].ToString(), System.Globalization.CultureInfo.InvariantCulture);
 
-            double cx = width * 2.54 / res;
-            double cy = height * 2.54 / res;
+                cx = width * 2.54 / res;
+                cy = height * 2.54 / res;
+            }
+            catch (Exception ex)
+            {
+            }
 
             int pptLeft = (int)(left * 100000 / cx);
             int pptRight = (int)(right * 100000 / cx);
Index: source/Common/OdfZipUtils/ZipArchiveWriter.cs
===================================================================
--- source/Common/OdfZipUtils/ZipArchiveWriter.cs	2008-04-15 17:24:27.000000000 -0700
+++ source/Common/OdfZipUtils/ZipArchiveWriter.cs	2008-04-15 17:20:25.000000000 -0700
@@ -1141,13 +1141,19 @@
         /// <param name="source">Relative path inside the source archive</param>
         public string ImageCopyBinary(String source)
         {
-            Stream sourceStream = GetStream(source);
+            try
+            {
+                Stream sourceStream = GetStream(source);
 
-            System.Drawing.Image img;
-            img = System.Drawing.Image.FromStream(sourceStream);
-
-            return img.Width.ToString(System.Globalization.CultureInfo.InvariantCulture) + ":" + img.Height.ToString(System.Globalization.CultureInfo.InvariantCulture) + ":" + img.VerticalResolution.ToString(System.Globalization.CultureInfo.InvariantCulture);
+                System.Drawing.Image img;
+                img = System.Drawing.Image.FromStream(sourceStream);
 
+                return img.Width.ToString(System.Globalization.CultureInfo.InvariantCulture) + ":" + img.Height.ToString(System.Globalization.CultureInfo.InvariantCulture) + ":" + img.VerticalResolution.ToString(System.Globalization.CultureInfo.InvariantCulture);
+            }
+            catch (Exception ex)
+            {
+                return "";
+            }
         }
     }
 
Index: source/Spreadsheet/Converter/OdfSharedStringsPostProcessor.cs 
===================================================================
--- source/Spreadsheet/Converter/OdfSharedStringsPostProcessor.cs	2008-04-15 17:25:46.000000000 -0700
+++ source/Spreadsheet/Converter/OdfSharedStringsPostProcessor.cs	2008-04-15 17:27:12.000000000 -0700
@@ -220,15 +220,22 @@
                 zipObj.Close();
                 resolverObj.Dispose();
 
-                string[] arrValues = new string[3];
-                arrValues = imgaeValues.Split(':');
-                double width = double.Parse(arrValues[0].ToString(),System.Globalization.CultureInfo.InvariantCulture);
-                double height = double.Parse(arrValues[1].ToString(),System.Globalization.CultureInfo.InvariantCulture);
-                double res = double.Parse(arrValues[2].ToString(),System.Globalization.CultureInfo.InvariantCulture);
-
-
-                double cx = width * 2.54 / res;
-                double cy = height * 2.54 / res;
+                double cx = 2.54 / 72;
+                double cy = 2.54 / 72;
+                try
+                {
+                    string[] arrValues = new string[3];
+                    arrValues = imgaeValues.Split(':');
+                    double width = double.Parse(arrValues[0].ToString(),System.Globalization.CultureInfo.InvariantCulture);
+                    double height = double.Parse(arrValues[1].ToString(),System.Globalization.CultureInfo.InvariantCulture);
+                    double res = double.Parse(arrValues[2].ToString(),System.Globalization.CultureInfo.InvariantCulture);
+
+                    cx = width * 2.54 / res;
+                    cy = height * 2.54 / res;
+                }
+                catch (Exception ex)
+                {
+                }
 
                 double odpLeft = (left * cx / 100000)/2.54;
                 double odpRight = (right * cx / 100000)/2.54;
Index: source/Spreadsheet/Converter/OoxCommentsPostProcessor.cs
===================================================================
--- source/Spreadsheet/Converter/OoxCommentsPostProcessor.cs	2008-04-15 17:33:34.000000000 -0700
+++ source/Spreadsheet/Converter/OoxCommentsPostProcessor.cs	2008-04-15 17:34:27.000000000 -0700
@@ -156,14 +156,22 @@
                 zipobj.Close();
 
 
-                string[] arrValues = new string[3];
-                arrValues = widht_height_res.Split(':');
-                double width = double.Parse(arrValues[0].ToString(),System.Globalization.CultureInfo.InvariantCulture);
-                double height = double.Parse(arrValues[1].ToString(),System.Globalization.CultureInfo.InvariantCulture);
-                double res = double.Parse(arrValues[2].ToString(),System.Globalization.CultureInfo.InvariantCulture);
+                double cx = 2.54 / 72;
+                double cy = 2.54 / 72;
+                try
+                {
+                    string[] arrValues = new string[3];
+                    arrValues = widht_height_res.Split(':');
+                    double width = double.Parse(arrValues[0].ToString(),System.Globalization.CultureInfo.InvariantCulture);
+                    double height = double.Parse(arrValues[1].ToString(),System.Globalization.CultureInfo.InvariantCulture);
+                    double res = double.Parse(arrValues[2].ToString(),System.Globalization.CultureInfo.InvariantCulture);
 
-                double cx = width * 2.54 / res;
-                double cy = height * 2.54 / res;
+                    cx = width * 2.54 / res;
+                    cy = height * 2.54 / res;
+                }
+                catch (Exception ex)
+                {
+                }
 
                 int pptLeft=0; 
                 int pptRight=0;
Index: source/Word/Converter/Makefile
===================================================================
--- source/Word/Converter/Makefile	2008-04-15 17:37:02.000000000 -0700
+++ source/Word/Converter/Makefile	2008-04-15 17:38:19.000000000 -0700
@@ -22,6 +22,13 @@
 ID_SUFFIX2=$(ID_SUFFIX).odf2oox
 RESOURCE_FLAGS+=${foreach file, $(ODF2OOX_XML), $(PREFIX2)/$(file),$(ID_SUFFIX2).$(file)}
 
+SHARED_RES= \
+    $(wildcard resources/*.png)
+SHARED_XML= $(foreach file, $(SHARED_RES), $(subst resources/,,$(file)))
+PREFIX3=-resource:resources
+ID_SUFFIX3=$(ID_SUFFIX)
+RESOURCE_FLAGS+=${foreach file, $(SHARED_XML), $(PREFIX3)/$(file),$(ID_SUFFIX3).$(file)}
+
 SOURCE=${wildcard *.cs}
 DISTFILES=$(SOURCE) $(ODF2OOX_RES) $(OOX2ODF_RES)
 
