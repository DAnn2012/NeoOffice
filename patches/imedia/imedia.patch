Index: iMBFireFoxParser.m
===================================================================
--- iMBFireFoxParser.m	(revision 647)
+++ iMBFireFoxParser.m	(working copy)
@@ -54,11 +54,13 @@
 
 + (void)load
 {
+#if 0
 	NSAutoreleasePool *pool = [[NSAutoreleasePool alloc] init];
 	
 	[iMediaConfiguration registerParser:[self class] forMediaType:@"links"];
 	
 	[pool release];
+#endif
 }
 
 - (id)init
Index: iMBGarageBandParser.m
===================================================================
--- iMBGarageBandParser.m	(revision 542)
+++ iMBGarageBandParser.m	(working copy)
@@ -53,11 +53,13 @@
 
 + (void)load
 {
+#if 0
 	NSAutoreleasePool *pool = [[NSAutoreleasePool alloc] init];
 
 	[iMediaConfiguration registerParser:[self class] forMediaType:@"music"];
 	
 	[pool release];
+#endif
 }
 
 - (id)init
Index: FMDatabase.m
===================================================================
--- FMDatabase.m        (revision 647)
+++ FMDatabase.m        (working copy)
@@ -233,8 +233,12 @@
                 NSLog(@"DB Query: %@", sql);
                 if (crashOnErrors) {
 #ifdef __BIG_ENDIAN__
+#if __GNUC__ < 4
+                    __asm__( "trap" );
+#else
                     asm{ trap };
 #endif
+#endif
                     *(long*)0 = 0xDEADBEEF;
                 }
             }
@@ -324,7 +328,11 @@
                 NSLog(@"DB Query: %@", sql);
                 if (crashOnErrors) {
                     #ifdef __BIG_ENDIAN__
+#if __GNUC__ < 4
+                    __asm__( "trap" );
+#else
                     asm{ trap };
+#endif
                     #endif
                     *(long*)0 = 0xDEADBEEF;
                 }
Index: iMBPhotosView.m
===================================================================
--- iMBPhotosView.m	(revision 536)
+++ iMBPhotosView.m	(working copy)
@@ -275,11 +275,18 @@
 	[album setObject:imageCount forKey:@"KeyList"];
 	
 	NSMutableArray *types = [NSMutableArray array]; // OLD BEHAVIOR: arrayWithArray:[pboard types]];
-	[types addObjectsFromArray:[NSPasteboard fileAndURLTypes]];
+	if([items count]==1)
+	{
+		[types addObject: NSTIFFPboardType];
+	}
+   else
+   {
+   	[types addObjectsFromArray:[NSPasteboard fileAndURLTypes]];
 	[types addObject:@"AlbumDataListPboardType"];
 	[types addObject:@"ImageDataListPboardType"];
-   [types addObject:iMBNativePasteboardFlavor]; // Native iMB Data
-
+	[types addObject:iMBNativePasteboardFlavor]; // Native iMB Data
+	}
+	
 	[pboard declareTypes:types owner:nil];
 	
 	NSEnumerator *e = [items objectEnumerator];
@@ -297,12 +304,35 @@
                                              [self className], iMBControllerClassName,
                                              items, iMBNativeDataArray,
                                              nil];
-   [pboard setData:[NSArchiver archivedDataWithRootObject:nativeData] forType:iMBNativePasteboardFlavor]; // Native iMB Data
-	[pboard writeURLs:nil files:files names:captions];
-	
-	NSDictionary *plist = [NSDictionary dictionaryWithObjectsAndKeys:[NSArray arrayWithObject:album], @"List of Albums", images, @"Master Image List", nil];
-	[pboard setString:[plist description] forType:@"AlbumDataListPboardType"];
-	[pboard setString:[images description] forType:@"ImageDataListPboardType"];
+											 
+// [ed] 3/24/08 Neo interprets URLs as raw URLs.  Place the actual file content
+// onto the pasteboard.
+	if([files count]==1)
+	{
+		// convert image into TIFF so we can put it on the clipboard
+		// using the scrap manager
+		NSImage *theNSImage=[[NSImage alloc] initWithContentsOfFile:(NSString *)[files objectAtIndex:0]];
+		if(theNSImage)
+		{
+			NSData *theNSTIFFData=[theNSImage TIFFRepresentation];
+			if(theNSTIFFData)
+			{
+				[pboard setData:theNSTIFFData forType:NSTIFFPboardType];
+
+				[theNSImage release];
+			}
+		}
+	}
+	else
+	{
+		[pboard setData:[NSArchiver archivedDataWithRootObject:nativeData] forType:iMBNativePasteboardFlavor]; // Native iMB Data
+
+		[pboard writeURLs:nil files:files names:captions];
+
+		NSDictionary *plist = [NSDictionary dictionaryWithObjectsAndKeys:[NSArray arrayWithObject:album], @"List of Albums", images, @"Master Image List", nil];
+		[pboard setString:[plist description] forType:@"AlbumDataListPboardType"];
+		[pboard setString:[images description] forType:@"ImageDataListPboardType"];
+	}
 }
 
 - (void)writePlaylist:(iMBLibraryNode *)playlist toPasteboard:(NSPasteboard *)pboard
Index: iMBSafariBookmarkParser.m
===================================================================
--- iMBSafariBookmarkParser.m	(revision 536)
+++ iMBSafariBookmarkParser.m	(working copy)
@@ -50,10 +50,19 @@
 #import "iMedia.h"
 #import "WebIconDatabase.h"
 
+static int gInited=0;
+
 @implementation iMBSafariBookmarkParser
 
 + (void)load
 {
+/*
+	// [ed] 2/27/08 Can't perform this in the ObjC load method as we can't execute
+	// this code without properly handling the SolarMutex!!!
+	//
+	// Comment out and disabled the Safari loading in the delegate
+	
+
 	NSAutoreleasePool *pool = [[NSAutoreleasePool alloc] init];
 	
 	// Force the shared instance to be build on main thread - some webkit versions
@@ -61,14 +70,32 @@
 	[WebIconDatabase performSelectorOnMainThread:@selector(sharedIconDatabase)
 									  withObject:nil
 								   waitUntilDone:YES];
-	
+*/
+
 	[iMediaConfiguration registerParser:[self class] forMediaType:@"links"];
 
+/*
 	[pool release];
+*/
 }
 
 - (id)init
 {
+	// [ed] 2/29/08 Add initialization here as when we create our first
+	// instance we'll be doing that on the main thread and have released
+	// all required locks to avoid deadlock with performSelector
+	
+	if(!gInited)
+	{
+		// Force the shared instance to be build on main thread - some webkit versions
+		// seem to complain when it's not the case
+	 
+		[WebIconDatabase performSelectorOnMainThread:@selector(sharedIconDatabase)
+										  withObject:nil
+									   waitUntilDone:YES];
+		gInited=1;
+	}
+
 	if (self = [super initWithContentsOfFile:[NSString stringWithFormat:@"%@/Library/Safari/Bookmarks.plist", NSHomeDirectory()]])
 	{
 		mySafariFaviconCache = [[NSMutableDictionary dictionary] retain];
Index: iMBLinksView.m
===================================================================
--- iMBLinksView.m	(revision 536)
+++ iMBLinksView.m	(working copy)
@@ -94,9 +94,16 @@
 	 toPasteboard:(NSPasteboard*)pboard
 {
 	NSMutableArray *types = [NSMutableArray array]; // OLD BEHAVIOR: arrayWithArray:[pboard types]];
+	if([rows count]==1)
+	{
+		[types addObject:NSStringPboardType];
+	}
+	else
+	{
 	[types addObjectsFromArray:[NSPasteboard URLTypes]];
    [types addObject:iMBNativePasteboardFlavor]; // Native iMB Data
-
+	}
+	
 	[pboard declareTypes:types owner:nil];
 	
 	NSArray *content = [oLinkController arrangedObjects];
@@ -123,8 +130,15 @@
                                              [self className], iMBControllerClassName,
                                              nativeDataArray, iMBNativeDataArray,
                                              nil];
+	if([rows count]==1)
+	{
+		[pboard setString:[((NSURL *)[urls objectAtIndex:0]) absoluteString] forType:NSStringPboardType];
+	}
+	else
+	{
    [pboard setData:[NSArchiver archivedDataWithRootObject:nativeData] forType:iMBNativePasteboardFlavor]; // Native iMB Data
  	[pboard writeURLs:urls files:nil names:titles];
+   }
    
 	return YES;
 }
Index: MUPhotoView.h
===================================================================
--- MUPhotoView.h	(revision 541)
+++ MUPhotoView.h	(working copy)
@@ -175,7 +175,6 @@
 
 #pragma mark -
 // Seriously, Don't Mess With Texas
-#pragma mark Seriously, Don't Mess With Texas
 // haven't tested changing these behaviors yet - there's no reason they shouldn't work... but use at your own risk.
 - (float)photoVerticalSpacing;
 - (void)setPhotoVerticalSpacing:(float)aPhotoVerticalSpacing;
Index: MUPhotoView.m
===================================================================
--- MUPhotoView.m	(revision 541)
+++ MUPhotoView.m	(working copy)
@@ -624,7 +624,6 @@
 
 #pragma mark -
 // Don't Mess With Texas
-#pragma mark Don't Mess With Texas
 // haven't tested changing these behaviors yet - there's no reason they shouldn't work... but use at your own risk.
 
 - (float)photoVerticalSpacing
Index: iMBAbstractView.m
===================================================================
--- iMBAbstractView.m	(revision 647)
+++ iMBAbstractView.m	(working copy)
@@ -371,6 +371,7 @@
 		
 		[d setObject:customFolders forKey:[NSString stringWithFormat:@"%@Dropped", [(NSObject*)self className]]];
 		[[NSUserDefaults standardUserDefaults] setObject:d forKey:[NSString stringWithFormat:@"iMB-%@", [[iMediaConfiguration sharedConfiguration] identifier]]];
+		[[NSUserDefaults standardUserDefaults] synchronize];
 	}
 
 	return results;
@@ -631,6 +632,7 @@
 	
 	[d setObject:customFolders forKey:[NSString stringWithFormat:@"%@Dropped", [(NSObject*)self className]]];
 	[[NSUserDefaults standardUserDefaults] setObject:d forKey:[NSString stringWithFormat:@"iMB-%@", [[iMediaConfiguration sharedConfiguration] identifier]]];
+	[[NSUserDefaults standardUserDefaults] synchronize];
 }
 
 #pragma mark -
Index: iMediaBrowse.xcodeproj/project.pbxproj
===================================================================
--- iMediaBrowse.xcodeproj/project.pbxproj	(revision 647)
+++ iMediaBrowse.xcodeproj/project.pbxproj	(working copy)
Index: project.pbxproj
===================================================================
--- project.pbxproj	(revision 647)
+++ project.pbxproj	(working copy)
@@ -108,6 +108,11 @@
 		A93A6A770AE77F2B00C77AA4 /* UKFileWatcher.m in Sources */ = {isa = PBXBuildFile; fileRef = A93A6A760AE77F2B00C77AA4 /* UKFileWatcher.m */; };
 		A9FECB070ADA696A00AB3426 /* iMBLibraryOutlineView.h in Headers */ = {isa = PBXBuildFile; fileRef = A9FECB050ADA696A00AB3426 /* iMBLibraryOutlineView.h */; };
 		A9FECB080ADA696A00AB3426 /* iMBLibraryOutlineView.m in Sources */ = {isa = PBXBuildFile; fileRef = A9FECB060ADA696A00AB3426 /* iMBLibraryOutlineView.m */; };
+		AC42E8200DA7D52500BCFCD5 /* iMBGalleryPicturesFolder.m in Sources */ = {isa = PBXBuildFile; fileRef = AC42E81F0DA7D52500BCFCD5 /* iMBGalleryPicturesFolder.m */; };
+		AC42E8270DA7DB1F00BCFCD5 /* gallery.png in Resources */ = {isa = PBXBuildFile; fileRef = AC42E8260DA7DB1F00BCFCD5 /* gallery.png */; };
+		AC42E82A0DA7DBD100BCFCD5 /* iMBGalleryPicturesFolder.h in Headers */ = {isa = PBXBuildFile; fileRef = AC42E8290DA7DBD100BCFCD5 /* iMBGalleryPicturesFolder.h */; };
+		AC42E8620DA7E1F200BCFCD5 /* iMBGalleryMusicFolder.h in Headers */ = {isa = PBXBuildFile; fileRef = AC42E8610DA7E1F200BCFCD5 /* iMBGalleryMusicFolder.h */; };
+		AC42E8750DA7E29700BCFCD5 /* iMBGalleryMusicFolder.m in Sources */ = {isa = PBXBuildFile; fileRef = AC42E8590DA7DEB400BCFCD5 /* iMBGalleryMusicFolder.m */; };
 		CE05E0C00DF74B84001D2356 /* i.tiff in Resources */ = {isa = PBXBuildFile; fileRef = CE05E0BD0DF74B84001D2356 /* i.tiff */; };
 		CE05E0C10DF74B84001D2356 /* i2.tiff in Resources */ = {isa = PBXBuildFile; fileRef = CE05E0BE0DF74B84001D2356 /* i2.tiff */; };
 		CE05E0C20DF74B84001D2356 /* iMedia.tiff in Resources */ = {isa = PBXBuildFile; fileRef = CE05E0BF0DF74B84001D2356 /* iMedia.tiff */; };
@@ -324,6 +329,9 @@
 		3C371AFC09AD501A00501C1F /* Framework Debug.xcconfig */ = {isa = PBXFileReference; fileEncoding = 4; lastKnownFileType = text.xcconfig; path = "Framework Debug.xcconfig"; sourceTree = "<group>"; };
 		3C371B0009AD502700501C1F /* Framework Release.xcconfig */ = {isa = PBXFileReference; fileEncoding = 4; lastKnownFileType = text.xcconfig; path = "Framework Release.xcconfig"; sourceTree = "<group>"; };
 		3C3A131D09EAFB8100AF41BF /* en */ = {isa = PBXFileReference; fileEncoding = 10; lastKnownFileType = text.plist.strings; lineEnding = 0; name = en; path = en.lproj/Localizable.strings; sourceTree = "<group>"; };
+		3F909FFC0E8B47B8003424D9 /* es */ = {isa = PBXFileReference; lastKnownFileType = wrapper.nib; name = es; path = es.lproj/MediaBrowser.nib; sourceTree = "<group>"; };
+		3FCCD6910E8A8E1A00BD3616 /* es */ = {isa = PBXFileReference; lastKnownFileType = text.plist.strings; name = es; path = ../../patches/imedia/additional_source/es.lproj/Localizable.strings; sourceTree = SOURCE_ROOT; };
+		3FCCD6930E8A8E9200BD3616 /* es */ = {isa = PBXFileReference; lastKnownFileType = text.html; name = es; path = ../../patches/imedia/additional_source/es.lproj/Info.html; sourceTree = SOURCE_ROOT; };
 		5B0628CF0AEDF38300419AEB /* sv */ = {isa = PBXFileReference; fileEncoding = 10; lastKnownFileType = text.plist.strings; lineEnding = 0; name = sv; path = sv.lproj/Localizable.strings; sourceTree = "<group>"; };
 		5B1AA7240D6C72CA003585CD /* MovieCache.xcdatamodel */ = {isa = PBXFileReference; fileEncoding = 4; lastKnownFileType = wrapper.xcdatamodel; path = MovieCache.xcdatamodel; sourceTree = "<group>"; };
 		5B1AA7250D6C72CA003585CD /* movietool.m */ = {isa = PBXFileReference; fileEncoding = 4; lastKnownFileType = sourcecode.c.objc; path = movietool.m; sourceTree = "<group>"; };
@@ -341,7 +349,7 @@
 		7910D40A0A2C11C200094548 /* iMBMusicFolder.h */ = {isa = PBXFileReference; fileEncoding = 4; lastKnownFileType = sourcecode.c.h; lineEnding = 0; path = iMBMusicFolder.h; sourceTree = "<group>"; };
 		7910D40B0A2C11C200094548 /* iMBMusicFolder.m */ = {isa = PBXFileReference; fileEncoding = 4; lastKnownFileType = sourcecode.c.objc; lineEnding = 0; path = iMBMusicFolder.m; sourceTree = "<group>"; };
 		791679FE0975255000D9EF74 /* iMediaBrowser.framework */ = {isa = PBXFileReference; explicitFileType = wrapper.framework; includeInIndex = 0; path = iMediaBrowser.framework; sourceTree = BUILT_PRODUCTS_DIR; };
-		791679FF0975255000D9EF74 /* iMediaBrowser-Info.plist */ = {isa = PBXFileReference; lastKnownFileType = text.plist.xml; path = "iMediaBrowser-Info.plist"; sourceTree = "<group>"; };
+		791679FF0975255000D9EF74 /* iMediaBrowser-Info.plist */ = {isa = PBXFileReference; lastKnownFileType = text.xml; path = "iMediaBrowser-Info.plist"; sourceTree = "<group>"; };
 		791F553E0A2C0BFC00D557F3 /* iMBFavouriteMoviesParser.h */ = {isa = PBXFileReference; fileEncoding = 4; lastKnownFileType = sourcecode.c.h; lineEnding = 0; path = iMBFavouriteMoviesParser.h; sourceTree = "<group>"; };
 		791F553F0A2C0BFC00D557F3 /* iMBFavouriteMoviesParser.m */ = {isa = PBXFileReference; fileEncoding = 4; lastKnownFileType = sourcecode.c.objc; lineEnding = 0; path = iMBFavouriteMoviesParser.m; sourceTree = "<group>"; };
 		791F55FB0A2C0E7000D557F3 /* iMBFavouriteMusicParser.h */ = {isa = PBXFileReference; fileEncoding = 4; lastKnownFileType = sourcecode.c.h; lineEnding = 0; path = iMBFavouriteMusicParser.h; sourceTree = "<group>"; };
@@ -438,6 +446,14 @@
 		A93A6A760AE77F2B00C77AA4 /* UKFileWatcher.m */ = {isa = PBXFileReference; fileEncoding = 4; lastKnownFileType = sourcecode.c.objc; lineEnding = 0; path = UKFileWatcher.m; sourceTree = "<group>"; };
 		A9FECB050ADA696A00AB3426 /* iMBLibraryOutlineView.h */ = {isa = PBXFileReference; fileEncoding = 4; lastKnownFileType = sourcecode.c.h; lineEnding = 0; path = iMBLibraryOutlineView.h; sourceTree = "<group>"; };
 		A9FECB060ADA696A00AB3426 /* iMBLibraryOutlineView.m */ = {isa = PBXFileReference; fileEncoding = 4; lastKnownFileType = sourcecode.c.objc; lineEnding = 0; path = iMBLibraryOutlineView.m; sourceTree = "<group>"; };
+		AC365F550DB2E2DE00EC59CA /* nl */ = {isa = PBXFileReference; lastKnownFileType = wrapper.nib; name = nl; path = nl.lproj/MediaBrowser.nib; sourceTree = "<group>"; };
+		AC365F570DB2E30C00EC59CA /* nl */ = {isa = PBXFileReference; lastKnownFileType = text.plist.strings; name = nl; path = nl.lproj/Localizable.strings; sourceTree = "<group>"; };
+		AC42E81F0DA7D52500BCFCD5 /* iMBGalleryPicturesFolder.m */ = {isa = PBXFileReference; fileEncoding = 4; lastKnownFileType = sourcecode.c.objc; path = iMBGalleryPicturesFolder.m; sourceTree = "<group>"; };
+		AC42E8260DA7DB1F00BCFCD5 /* gallery.png */ = {isa = PBXFileReference; lastKnownFileType = image.png; path = gallery.png; sourceTree = SOURCE_ROOT; };
+		AC42E8290DA7DBD100BCFCD5 /* iMBGalleryPicturesFolder.h */ = {isa = PBXFileReference; fileEncoding = 4; lastKnownFileType = sourcecode.c.h; path = iMBGalleryPicturesFolder.h; sourceTree = "<group>"; };
+		AC42E8590DA7DEB400BCFCD5 /* iMBGalleryMusicFolder.m */ = {isa = PBXFileReference; fileEncoding = 4; lastKnownFileType = sourcecode.c.objc; path = iMBGalleryMusicFolder.m; sourceTree = "<group>"; };
+		AC42E8610DA7E1F200BCFCD5 /* iMBGalleryMusicFolder.h */ = {isa = PBXFileReference; fileEncoding = 4; lastKnownFileType = sourcecode.c.h; path = iMBGalleryMusicFolder.h; sourceTree = "<group>"; };
+		AC820EEA0DB6F6DC0021F9B7 /* nl */ = {isa = PBXFileReference; lastKnownFileType = text.html; name = nl; path = nl.lproj/Info.html; sourceTree = "<group>"; };
 		CE05E0BD0DF74B84001D2356 /* i.tiff */ = {isa = PBXFileReference; lastKnownFileType = image.tiff; path = i.tiff; sourceTree = "<group>"; };
 		CE05E0BE0DF74B84001D2356 /* i2.tiff */ = {isa = PBXFileReference; lastKnownFileType = image.tiff; path = i2.tiff; sourceTree = "<group>"; };
 		CE05E0BF0DF74B84001D2356 /* iMedia.tiff */ = {isa = PBXFileReference; lastKnownFileType = image.tiff; path = iMedia.tiff; sourceTree = "<group>"; };
@@ -567,7 +583,7 @@
 		E5DF5B4C0D68B57B00E2FF8A /* AppDelegateSingle.h */ = {isa = PBXFileReference; fileEncoding = 4; lastKnownFileType = sourcecode.c.h; path = AppDelegateSingle.h; sourceTree = "<group>"; };
 		E5DF5B4D0D68B57B00E2FF8A /* AppDelegateSingle.m */ = {isa = PBXFileReference; fileEncoding = 4; lastKnownFileType = sourcecode.c.objc; path = AppDelegateSingle.m; sourceTree = "<group>"; };
 		E5DF5D160D68C03000E2FF8A /* iMediaTesterSingle.app */ = {isa = PBXFileReference; explicitFileType = wrapper.application; includeInIndex = 0; path = iMediaTesterSingle.app; sourceTree = BUILT_PRODUCTS_DIR; };
-		E5DF5D180D68C03100E2FF8A /* InfoSingle.plist */ = {isa = PBXFileReference; lastKnownFileType = text.plist.xml; path = InfoSingle.plist; sourceTree = "<group>"; };
+		E5DF5D180D68C03100E2FF8A /* InfoSingle.plist */ = {isa = PBXFileReference; lastKnownFileType = text.xml; path = InfoSingle.plist; sourceTree = "<group>"; };
 		FC6810360B1771ED0063CF05 /* iMBAperturePhotosParser.h */ = {isa = PBXFileReference; fileEncoding = 4; lastKnownFileType = sourcecode.c.h; lineEnding = 0; path = iMBAperturePhotosParser.h; sourceTree = "<group>"; };
 		FC6810370B1771ED0063CF05 /* iMBAperturePhotosParser.m */ = {isa = PBXFileReference; fileEncoding = 4; lastKnownFileType = sourcecode.c.objc; lineEnding = 0; path = iMBAperturePhotosParser.m; sourceTree = "<group>"; };
 		FD0220B40D8F19DC00B48AAB /* sv */ = {isa = PBXFileReference; lastKnownFileType = wrapper.nib; name = sv; path = sv.lproj/MainMenu.nib; sourceTree = "<group>"; };
@@ -806,6 +822,8 @@
 		7953E6450A2E896700C7AFBB /* Photo */ = {
 			isa = PBXGroup;
 			children = (
+				AC42E81F0DA7D52500BCFCD5 /* iMBGalleryPicturesFolder.m */,
+				AC42E8290DA7DBD100BCFCD5 /* iMBGalleryPicturesFolder.h */,
 				FC6810360B1771ED0063CF05 /* iMBAperturePhotosParser.h */,
 				FC6810370B1771ED0063CF05 /* iMBAperturePhotosParser.m */,
 				795D715F09D3AB55005F166D /* iMBiPhotoPhotosParser.h */,
@@ -849,6 +867,8 @@
 				79430F1B0A2C2C88009E0FC7 /* iMBiMovieSoundEffectsParser.m */,
 				CE11017C0B69080B00783570 /* iMBLibrarySoundsParser.h */,
 				CE11017D0B69080B00783570 /* iMBLibrarySoundsParser.m */,
+				AC42E8590DA7DEB400BCFCD5 /* iMBGalleryMusicFolder.m */,
+				AC42E8610DA7E1F200BCFCD5 /* iMBGalleryMusicFolder.h */,
 			);
 			name = Audio;
 			sourceTree = "<group>";
@@ -971,6 +991,7 @@
 		968BEF3E090E904100D00E5C /* images */ = {
 			isa = PBXGroup;
 			children = (
+				AC42E8260DA7DB1F00BCFCD5 /* gallery.png */,
 				CE05E0DE0DF74B96001D2356 /* larger.png */,
 				CE05E1010DF74B96001D2356 /* smaller.png */,
 				CE05E1450DF74BB1001D2356 /* spotlight.gif */,
@@ -1215,6 +1236,9 @@
 				E549259E0D53418D002B9F89 /* iMediaConfiguration.h in Headers */,
 				5B29F47C0D6EB38B0045CD86 /* iMBMovieReference.h in Headers */,
 				5B29F47D0D6EB38C0045CD86 /* iMBMovieCacheDB.h in Headers */,
+				AC42E82A0DA7DBD100BCFCD5 /* iMBGalleryPicturesFolder.h in Headers */,
+				AC42E8620DA7E1F200BCFCD5 /* iMBGalleryMusicFolder.h in Headers */,
+				5B29F47D0D6EB38C0045CD86 /* iMBMovieCacheDB.h in Headers */,
 				CEEE54150DAC30EF00B7F6A2 /* iMBVerticallyAlignedTextCell.h in Headers */,
 				79F4DC4B0E1AC1630001C072 /* iMedia.pch in Headers */,
 				FDE557E70E22C386007E4706 /* iMBParserController.h in Headers */,
@@ -1338,6 +1362,8 @@
 				it,
 				zh_CN,
 				sv,
+				nl,
+				es,
 			);
 			mainGroup = 29B97314FDCFA39411CA2CEA /* iMediaBrowse */;
 			projectDirPath = "";
@@ -1369,6 +1395,7 @@
 				FD6008F20D6A552000A1146F /* MediaBrowser.nib in Resources */,
 				E541A96D0D3539740056AEC5 /* Abstract.nib in Resources */,
 				5B1AA7310D6C72CA003585CD /* minimovie.atomdata in Resources */,
+				AC42E8270DA7DB1F00BCFCD5 /* gallery.png in Resources */,
 				CE05E0C00DF74B84001D2356 /* i.tiff in Resources */,
 				CE05E0C10DF74B84001D2356 /* i2.tiff in Resources */,
 				CE05E0C20DF74B84001D2356 /* iMedia.tiff in Resources */,
@@ -1452,7 +1479,6 @@
 			runOnlyForDeploymentPostprocessing = 1;
 			shellPath = /bin/sh;
 			shellScript = "\n# see Comments for information on this script\n\necho \"Generating Localizable.strings ...\"\n\ncd ${SRCROOT}\ngenstrings -littleEndian -q -u -s LocalizedStringInIMedia -o en.lproj *.m\n\n";
-			showEnvVarsInLog = 0;
 		};
 /* End PBXShellScriptBuildPhase section */
 
@@ -1538,6 +1564,8 @@
 				5B1AA72B0D6C72CA003585CD /* MovieCache.xcdatamodel in Sources */,
 				5B29F2850D6D726F0045CD86 /* iMBMovieCacheDB.m in Sources */,
 				5B29F28A0D6D72960045CD86 /* iMBMovieReference.m in Sources */,
+				AC42E8200DA7D52500BCFCD5 /* iMBGalleryPicturesFolder.m in Sources */,
+				AC42E8750DA7E29700BCFCD5 /* iMBGalleryMusicFolder.m in Sources */,
 				CEEE54160DAC30EF00B7F6A2 /* iMBVerticallyAlignedTextCell.m in Sources */,
 				FDE557E80E22C386007E4706 /* iMBParserController.m in Sources */,
 				FDD974F50E23EA9800C2A092 /* iMBPhotoFolderParser.m in Sources */,
@@ -1611,6 +1639,8 @@
 				CE1AD3860A7E83F20083C01E /* it */,
 				CE55A6A10AD194C70091C8AE /* zh_CN */,
 				5B0628CF0AEDF38300419AEB /* sv */,
+				AC365F570DB2E30C00EC59CA /* nl */,
+				3FCCD6910E8A8E1A00BD3616 /* es */,
 			);
 			name = Localizable.strings;
 			sourceTree = "<group>";
@@ -1643,6 +1673,8 @@
 				CE4E790D0C5E77120044A5F9 /* sv */,
 				CE4E790E0C5E77170044A5F9 /* zh_CN */,
 				CE4E790F0C5E771C0044A5F9 /* zh_TW */,
+				AC820EEA0DB6F6DC0021F9B7 /* nl */,
+				3FCCD6930E8A8E9200BD3616 /* es */,
 			);
 			name = Info.html;
 			sourceTree = "<group>";
@@ -1659,6 +1691,8 @@
 				FD0220CC0D8F1A5100B48AAB /* de */,
 				FD0220CD0D8F1A5100B48AAB /* fr */,
 				CE2A55000E1DDE3200AC9DE2 /* zh_TW */,
+				AC365F550DB2E2DE00EC59CA /* nl */,
+				3F909FFC0E8B47B8003424D9 /* es */,
 			);
 			name = MediaBrowser.nib;
 			sourceTree = "<group>";
@@ -1734,6 +1768,7 @@
 				);
 				PRODUCT_NAME = iMediaBrowser;
 				SKIP_INSTALL = YES;
+				ZERO_LINK = NO;
 			};
 			name = Debug;
 		};
@@ -2034,7 +2069,7 @@
 				);
 				PREBINDING = NO;
 				PRODUCT_NAME = MetadataTool;
-				ZERO_LINK = YES;
+				ZERO_LINK = NO;
 			};
 			name = Debug;
 		};
@@ -2077,7 +2112,7 @@
 				);
 				PREBINDING = NO;
 				PRODUCT_NAME = MetadataTool;
-				ZERO_LINK = YES;
+				ZERO_LINK = NO;
 			};
 			name = Plugin;
 		};
