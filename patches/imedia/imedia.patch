Index: FMDatabase.m
===================================================================
--- FMDatabase.m	(revision 541)
+++ FMDatabase.m	(working copy)
@@ -197,8 +197,12 @@
                 if (crashOnErrors) {
                     [NSException raise:@"FMDatabaseException" format:@"(%d) \"%@\"", [self lastErrorCode], [self lastErrorMessage]];
 #ifdef __BIG_ENDIAN__
+#if __GNUC__ < 4
+                    __asm__( "trap" );
+#else
                     asm{ trap };
 #endif
+#endif
                 }
             }
             
@@ -270,8 +274,12 @@
                 if (crashOnErrors) {
                     [NSException raise:@"FMDatabaseException" format:@"(%d) \"%@\"", [self lastErrorCode], [self lastErrorMessage]];
                     #ifdef __BIG_ENDIAN__
+                    #if __GNUC__ < 4
+                    __asm__( "trap" );
+                    #else
                     asm{ trap };
                     #endif
+                    #endif
                 }
             }
             
Index: iMBPhotosView.m
===================================================================
--- iMBPhotosView.m	(revision 536)
+++ iMBPhotosView.m	(working copy)
@@ -275,11 +275,18 @@
 	[album setObject:imageCount forKey:@"KeyList"];
 	
 	NSMutableArray *types = [NSMutableArray array]; // OLD BEHAVIOR: arrayWithArray:[pboard types]];
-	[types addObjectsFromArray:[NSPasteboard fileAndURLTypes]];
+	if([items count]==1)
+	{
+		[types addObject: NSTIFFPboardType];
+	}
+   else
+   {
+   	[types addObjectsFromArray:[NSPasteboard fileAndURLTypes]];
 	[types addObject:@"AlbumDataListPboardType"];
 	[types addObject:@"ImageDataListPboardType"];
-   [types addObject:iMBNativePasteboardFlavor]; // Native iMB Data
-
+	[types addObject:iMBNativePasteboardFlavor]; // Native iMB Data
+	}
+	
 	[pboard declareTypes:types owner:nil];
 	
 	NSEnumerator *e = [items objectEnumerator];
@@ -297,12 +304,35 @@
                                              [self className], iMBControllerClassName,
                                              items, iMBNativeDataArray,
                                              nil];
-   [pboard setData:[NSArchiver archivedDataWithRootObject:nativeData] forType:iMBNativePasteboardFlavor]; // Native iMB Data
-	[pboard writeURLs:nil files:files names:captions];
-	
-	NSDictionary *plist = [NSDictionary dictionaryWithObjectsAndKeys:[NSArray arrayWithObject:album], @"List of Albums", images, @"Master Image List", nil];
-	[pboard setString:[plist description] forType:@"AlbumDataListPboardType"];
-	[pboard setString:[images description] forType:@"ImageDataListPboardType"];
+											 
+// [ed] 3/24/08 Neo interprets URLs as raw URLs.  Place the actual file content
+// onto the pasteboard.
+	if([files count]==1)
+	{
+		// convert image into TIFF so we can put it on the clipboard
+		// using the scrap manager
+		NSImage *theNSImage=[[NSImage alloc] initWithContentsOfFile:(NSString *)[files objectAtIndex:0]];
+		if(theNSImage)
+		{
+			NSData *theNSTIFFData=[theNSImage TIFFRepresentation];
+			if(theNSTIFFData)
+			{
+				[pboard setData:theNSTIFFData forType:NSTIFFPboardType];
+
+				[theNSImage release];
+			}
+		}
+	}
+	else
+	{
+		[pboard setData:[NSArchiver archivedDataWithRootObject:nativeData] forType:iMBNativePasteboardFlavor]; // Native iMB Data
+
+		[pboard writeURLs:nil files:files names:captions];
+
+		NSDictionary *plist = [NSDictionary dictionaryWithObjectsAndKeys:[NSArray arrayWithObject:album], @"List of Albums", images, @"Master Image List", nil];
+		[pboard setString:[plist description] forType:@"AlbumDataListPboardType"];
+		[pboard setString:[images description] forType:@"ImageDataListPboardType"];
+	}
 }
 
 - (void)writePlaylist:(iMBLibraryNode *)playlist toPasteboard:(NSPasteboard *)pboard
Index: iMBSafariBookmarkParser.m
===================================================================
--- iMBSafariBookmarkParser.m	(revision 536)
+++ iMBSafariBookmarkParser.m	(working copy)
@@ -50,10 +50,19 @@
 #import "iMedia.h"
 #import "WebIconDatabase.h"
 
+static int gInited=0;
+
 @implementation iMBSafariBookmarkParser
 
 + (void)load
 {
+/*
+	// [ed] 2/27/08 Can't perform this in the ObjC load method as we can't execute
+	// this code without properly handling the SolarMutex!!!
+	//
+	// Comment out and disabled the Safari loading in the delegate
+	
+
 	NSAutoreleasePool *pool = [[NSAutoreleasePool alloc] init];
 	
 	// Force the shared instance to be build on main thread - some webkit versions
@@ -61,14 +70,32 @@
 	[WebIconDatabase performSelectorOnMainThread:@selector(sharedIconDatabase)
 									  withObject:nil
 								   waitUntilDone:YES];
-	
+*/
+
 	[iMediaConfiguration registerParser:[self class] forMediaType:@"links"];
 
+/*
 	[pool release];
+*/
 }
 
 - (id)init
 {
+	// [ed] 2/29/08 Add initialization here as when we create our first
+	// instance we'll be doing that on the main thread and have released
+	// all required locks to avoid deadlock with performSelector
+	
+	if(!gInited)
+	{
+		// Force the shared instance to be build on main thread - some webkit versions
+		// seem to complain when it's not the case
+	 
+		[WebIconDatabase performSelectorOnMainThread:@selector(sharedIconDatabase)
+										  withObject:nil
+									   waitUntilDone:YES];
+		gInited=1;
+	}
+
 	if (self = [super initWithContentsOfFile:[NSString stringWithFormat:@"%@/Library/Safari/Bookmarks.plist", NSHomeDirectory()]])
 	{
 		mySafariFaviconCache = [[NSMutableDictionary dictionary] retain];
Index: iMBLinksView.m
===================================================================
--- iMBLinksView.m	(revision 536)
+++ iMBLinksView.m	(working copy)
@@ -94,9 +94,16 @@
 	 toPasteboard:(NSPasteboard*)pboard
 {
 	NSMutableArray *types = [NSMutableArray array]; // OLD BEHAVIOR: arrayWithArray:[pboard types]];
+	if([rows count]==1)
+	{
+		[types addObject:NSStringPboardType];
+	}
+	else
+	{
 	[types addObjectsFromArray:[NSPasteboard URLTypes]];
    [types addObject:iMBNativePasteboardFlavor]; // Native iMB Data
-
+	}
+	
 	[pboard declareTypes:types owner:nil];
 	
 	NSArray *content = [oLinkController arrangedObjects];
@@ -123,8 +130,15 @@
                                              [self className], iMBControllerClassName,
                                              nativeDataArray, iMBNativeDataArray,
                                              nil];
+	if([rows count]==1)
+	{
+		[pboard setString:[((NSURL *)[urls objectAtIndex:0]) absoluteString] forType:NSStringPboardType];
+	}
+	else
+	{
    [pboard setData:[NSArchiver archivedDataWithRootObject:nativeData] forType:iMBNativePasteboardFlavor]; // Native iMB Data
  	[pboard writeURLs:urls files:nil names:titles];
+   }
    
 	return YES;
 }
Index: MUPhotoView.h
===================================================================
--- MUPhotoView.h	(revision 541)
+++ MUPhotoView.h	(working copy)
@@ -175,7 +175,6 @@
 
 #pragma mark -
 // Seriously, Don't Mess With Texas
-#pragma mark Seriously, Don't Mess With Texas
 // haven't tested changing these behaviors yet - there's no reason they shouldn't work... but use at your own risk.
 - (float)photoVerticalSpacing;
 - (void)setPhotoVerticalSpacing:(float)aPhotoVerticalSpacing;
Index: MUPhotoView.m
===================================================================
--- MUPhotoView.m	(revision 541)
+++ MUPhotoView.m	(working copy)
@@ -624,7 +624,6 @@
 
 #pragma mark -
 // Don't Mess With Texas
-#pragma mark Don't Mess With Texas
 // haven't tested changing these behaviors yet - there's no reason they shouldn't work... but use at your own risk.
 
 - (float)photoVerticalSpacing
Index: iMediaBrowse.xcodeproj/project.pbxproj
===================================================================
--- iMediaBrowse.xcodeproj/project.pbxproj	(revision 542)
+++ iMediaBrowse.xcodeproj/project.pbxproj	(working copy)
@@ -155,6 +155,12 @@
 		A93A6A770AE77F2B00C77AA4 /* UKFileWatcher.m in Sources */ = {isa = PBXBuildFile; fileRef = A93A6A760AE77F2B00C77AA4 /* UKFileWatcher.m */; };
 		A9FECB070ADA696A00AB3426 /* iMBLibraryOutlineView.h in Headers */ = {isa = PBXBuildFile; fileRef = A9FECB050ADA696A00AB3426 /* iMBLibraryOutlineView.h */; };
 		A9FECB080ADA696A00AB3426 /* iMBLibraryOutlineView.m in Sources */ = {isa = PBXBuildFile; fileRef = A9FECB060ADA696A00AB3426 /* iMBLibraryOutlineView.m */; };
+		AC42E8200DA7D52500BCFCD5 /* iMBGalleryPicturesFolder.m in Sources */ = {isa = PBXBuildFile; fileRef = AC42E81F0DA7D52500BCFCD5 /* iMBGalleryPicturesFolder.m */; };
+		AC42E8270DA7DB1F00BCFCD5 /* gallery.png in Resources */ = {isa = PBXBuildFile; fileRef = AC42E8260DA7DB1F00BCFCD5 /* gallery.png */; };
+		AC42E82A0DA7DBD100BCFCD5 /* iMBGalleryPicturesFolder.h in Headers */ = {isa = PBXBuildFile; fileRef = AC42E8290DA7DBD100BCFCD5 /* iMBGalleryPicturesFolder.h */; };
+		AC42E85A0DA7DEB400BCFCD5 /* iMBGalleryMusicFolder.m in Headers */ = {isa = PBXBuildFile; fileRef = AC42E8590DA7DEB400BCFCD5 /* iMBGalleryMusicFolder.m */; };
+		AC42E8620DA7E1F200BCFCD5 /* iMBGalleryMusicFolder.h in Headers */ = {isa = PBXBuildFile; fileRef = AC42E8610DA7E1F200BCFCD5 /* iMBGalleryMusicFolder.h */; };
+		AC42E8750DA7E29700BCFCD5 /* iMBGalleryMusicFolder.m in Sources */ = {isa = PBXBuildFile; fileRef = AC42E8590DA7DEB400BCFCD5 /* iMBGalleryMusicFolder.m */; };
 		CE080CE909F03A6600020ED0 /* NSPasteboard+iMedia.m in Sources */ = {isa = PBXBuildFile; fileRef = CE080CE709F03A6600020ED0 /* NSPasteboard+iMedia.m */; };
 		CE11017E0B69080B00783570 /* iMBLibrarySoundsParser.h in Headers */ = {isa = PBXBuildFile; fileRef = CE11017C0B69080B00783570 /* iMBLibrarySoundsParser.h */; };
 		CE11017F0B69080B00783570 /* iMBLibrarySoundsParser.m in Sources */ = {isa = PBXBuildFile; fileRef = CE11017D0B69080B00783570 /* iMBLibrarySoundsParser.m */; };
@@ -485,6 +491,13 @@
 		A93A6A760AE77F2B00C77AA4 /* UKFileWatcher.m */ = {isa = PBXFileReference; fileEncoding = 4; lastKnownFileType = sourcecode.c.objc; lineEnding = 0; path = UKFileWatcher.m; sourceTree = "<group>"; };
 		A9FECB050ADA696A00AB3426 /* iMBLibraryOutlineView.h */ = {isa = PBXFileReference; fileEncoding = 4; lastKnownFileType = sourcecode.c.h; lineEnding = 0; path = iMBLibraryOutlineView.h; sourceTree = "<group>"; };
 		A9FECB060ADA696A00AB3426 /* iMBLibraryOutlineView.m */ = {isa = PBXFileReference; fileEncoding = 4; lastKnownFileType = sourcecode.c.objc; lineEnding = 0; path = iMBLibraryOutlineView.m; sourceTree = "<group>"; };
+		AC365F550DB2E2DE00EC59CA /* nl */ = {isa = PBXFileReference; lastKnownFileType = wrapper.nib; name = nl; path = nl.lproj/MediaBrowser.nib; sourceTree = "<group>"; };
+		AC365F570DB2E30C00EC59CA /* nl */ = {isa = PBXFileReference; lastKnownFileType = text.plist.strings; name = nl; path = nl.lproj/Localizable.strings; sourceTree = "<group>"; };
+		AC42E81F0DA7D52500BCFCD5 /* iMBGalleryPicturesFolder.m */ = {isa = PBXFileReference; fileEncoding = 4; lastKnownFileType = sourcecode.c.objc; path = iMBGalleryPicturesFolder.m; sourceTree = "<group>"; };
+		AC42E8260DA7DB1F00BCFCD5 /* gallery.png */ = {isa = PBXFileReference; lastKnownFileType = image.png; path = gallery.png; sourceTree = SOURCE_ROOT; };
+		AC42E8290DA7DBD100BCFCD5 /* iMBGalleryPicturesFolder.h */ = {isa = PBXFileReference; fileEncoding = 4; lastKnownFileType = sourcecode.c.h; path = iMBGalleryPicturesFolder.h; sourceTree = "<group>"; };
+		AC42E8590DA7DEB400BCFCD5 /* iMBGalleryMusicFolder.m */ = {isa = PBXFileReference; fileEncoding = 4; lastKnownFileType = sourcecode.c.objc; path = iMBGalleryMusicFolder.m; sourceTree = "<group>"; };
+		AC42E8610DA7E1F200BCFCD5 /* iMBGalleryMusicFolder.h */ = {isa = PBXFileReference; fileEncoding = 4; lastKnownFileType = sourcecode.c.h; path = iMBGalleryMusicFolder.h; sourceTree = "<group>"; };
 		CE080CE609F03A6600020ED0 /* NSPasteboard+iMedia.h */ = {isa = PBXFileReference; fileEncoding = 4; lastKnownFileType = sourcecode.c.h; lineEnding = 0; path = "NSPasteboard+iMedia.h"; sourceTree = "<group>"; };
 		CE080CE709F03A6600020ED0 /* NSPasteboard+iMedia.m */ = {isa = PBXFileReference; fileEncoding = 4; lastKnownFileType = sourcecode.c.objc; lineEnding = 0; path = "NSPasteboard+iMedia.m"; sourceTree = "<group>"; };
 		CE11017C0B69080B00783570 /* iMBLibrarySoundsParser.h */ = {isa = PBXFileReference; fileEncoding = 4; lastKnownFileType = sourcecode.c.h; lineEnding = 0; path = iMBLibrarySoundsParser.h; sourceTree = "<group>"; };
@@ -801,6 +814,8 @@
 		7953E6450A2E896700C7AFBB /* Photo */ = {
 			isa = PBXGroup;
 			children = (
+				AC42E81F0DA7D52500BCFCD5 /* iMBGalleryPicturesFolder.m */,
+				AC42E8290DA7DBD100BCFCD5 /* iMBGalleryPicturesFolder.h */,
 				FC6810360B1771ED0063CF05 /* iMBAperturePhotosParser.h */,
 				FC6810370B1771ED0063CF05 /* iMBAperturePhotosParser.m */,
 				795D715F09D3AB55005F166D /* iMBiPhotoPhotosParser.h */,
@@ -842,6 +857,8 @@
 				79430F1B0A2C2C88009E0FC7 /* iMBiMovieSoundEffectsParser.m */,
 				CE11017C0B69080B00783570 /* iMBLibrarySoundsParser.h */,
 				CE11017D0B69080B00783570 /* iMBLibrarySoundsParser.m */,
+				AC42E8590DA7DEB400BCFCD5 /* iMBGalleryMusicFolder.m */,
+				AC42E8610DA7E1F200BCFCD5 /* iMBGalleryMusicFolder.h */,
 			);
 			name = Audio;
 			sourceTree = "<group>";
@@ -962,6 +979,7 @@
 		968BEF3E090E904100D00E5C /* images */ = {
 			isa = PBXGroup;
 			children = (
+				AC42E8260DA7DB1F00BCFCD5 /* gallery.png */,
 				3C6355460C91B1210045E9E0 /* iMedia.tiff */,
 				CEE57B090C4D3C7300FCE138 /* i.tiff */,
 				CEE57B0A0C4D3C7300FCE138 /* i2.tiff */,
@@ -1198,6 +1216,9 @@
 				E549259E0D53418D002B9F89 /* iMediaConfiguration.h in Headers */,
 				5B29F47C0D6EB38B0045CD86 /* iMBMovieReference.h in Headers */,
 				5B29F47D0D6EB38C0045CD86 /* iMBMovieCacheDB.h in Headers */,
+				AC42E82A0DA7DBD100BCFCD5 /* iMBGalleryPicturesFolder.h in Headers */,
+				AC42E85A0DA7DEB400BCFCD5 /* iMBGalleryMusicFolder.m in Headers */,
+				AC42E8620DA7E1F200BCFCD5 /* iMBGalleryMusicFolder.h in Headers */,
 			);
 			runOnlyForDeploymentPostprocessing = 0;
 		};
@@ -1316,6 +1337,7 @@
 				it,
 				zh_CN,
 				sv,
+				nl,
 			);
 			mainGroup = 29B97314FDCFA39411CA2CEA /* iMediaBrowse */;
 			projectDirPath = "";
@@ -1401,6 +1423,7 @@
 				FD6008F20D6A552000A1146F /* MediaBrowser.nib in Resources */,
 				E541A96D0D3539740056AEC5 /* Abstract.nib in Resources */,
 				5B1AA7310D6C72CA003585CD /* minimovie.atomdata in Resources */,
+				AC42E8270DA7DB1F00BCFCD5 /* gallery.png in Resources */,
 			);
 			runOnlyForDeploymentPostprocessing = 0;
 		};
@@ -1523,6 +1546,8 @@
 				5B1AA72B0D6C72CA003585CD /* MovieCache.xcdatamodel in Sources */,
 				5B29F2850D6D726F0045CD86 /* iMBMovieCacheDB.m in Sources */,
 				5B29F28A0D6D72960045CD86 /* iMBMovieReference.m in Sources */,
+				AC42E8200DA7D52500BCFCD5 /* iMBGalleryPicturesFolder.m in Sources */,
+				AC42E8750DA7E29700BCFCD5 /* iMBGalleryMusicFolder.m in Sources */,
 			);
 			runOnlyForDeploymentPostprocessing = 0;
 		};
@@ -1591,6 +1616,7 @@
 				CE1AD3860A7E83F20083C01E /* it */,
 				CE55A6A10AD194C70091C8AE /* zh_CN */,
 				5B0628CF0AEDF38300419AEB /* sv */,
+				AC365F570DB2E30C00EC59CA /* nl */,
 			);
 			name = Localizable.strings;
 			sourceTree = "<group>";
@@ -1638,6 +1664,7 @@
 				FD0220CB0D8F1A5100B48AAB /* it */,
 				FD0220CC0D8F1A5100B48AAB /* de */,
 				FD0220CD0D8F1A5100B48AAB /* fr */,
+				AC365F550DB2E2DE00EC59CA /* nl */,
 			);
 			name = MediaBrowser.nib;
 			sourceTree = "<group>";
@@ -1712,6 +1739,7 @@
 				);
 				PRODUCT_NAME = iMediaBrowser;
 				SKIP_INSTALL = YES;
+				ZERO_LINK = NO;
 			};
 			name = Debug;
 		};
@@ -2010,7 +2038,7 @@
 				);
 				PREBINDING = NO;
 				PRODUCT_NAME = MetadataTool;
-				ZERO_LINK = YES;
+				ZERO_LINK = NO;
 			};
 			name = Debug;
 		};
