#!/bin/bash -x
##########################################################################
# 
#   $RCSfile$
# 
#   $Revision$
# 
#   last change: $Author$ $Date$
# 
#   The Contents of this file are made available subject to the terms of
#   either of the following licenses
# 
#          - GNU General Public License Version 2.1
# 
#   Patrick Luby, June 2003
# 
#   GNU General Public License Version 2.1
#   =============================================
#   Copyright 2003 Planamesa Inc.
# 
#   This library is free software; you can redistribute it and/or
#   modify it under the terms of the GNU General Public
#   License version 2.1, as published by the Free Software Foundation.
# 
#   This library is distributed in the hope that it will be useful,
#   but WITHOUT ANY WARRANTY; without even the implied warranty of
#   MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the GNU
#   General Public License for more details.
# 
#   You should have received a copy of the GNU General Public
#   License along with this library; if not, write to the Free Software
#   Foundation, Inc., 59 Temple Place, Suite 330, Boston,
#   MA  02111-1307  USA
# 
##########################################################################

userinstall="$HOME/Library/Containers/org.neooffice.$(PRODUCT_DIR_NAME)/Data/Library/Preferences/$(PRODUCT_DIR_NAME)"
target_file_type="$(TARGET_FILE_TYPE)"
last_installed_product_found=

check_installation() {

	if [ -z "$1" ] ; then
		return 1;
	fi

	if [ ! -f "$1/Contents/Info.plist" ] ; then
		return 1;
	fi

	# Check for matching build machine. Note: we trim "local." off the end of
	# the build machine because some test patches were released with "local."
	# truncated.
	grep "`echo '$(BUILD_MACHINE)' | sed 's#\.local\.$#\.#'`" "$1/Contents/Info.plist" >/dev/null 2>&1
	if [ "$?" != "0" ] ; then
		return 1;
	fi

	file_type=`file "$1/Contents/MacOS/soffice.bin" | sed 's#^.*: ##'`
	if [ "$file_type" != "$target_file_type" ] ; then
		return 1
	fi

	if [ -f "$1/Contents/MacOS/bootstraprc" ] ; then
		# Allow a product base match
		productnameversion="$(PRODUCT_NAME) $(PRODUCT_VERSION_BASE)"
		productkey=`grep "^ProductKey=$productnameversion" "$1/Contents/MacOS/bootstraprc"`
		if [ ! -z "$productkey" ] ; then
			return 0;
		fi

		# Allow a previous product base match
		productnameversion="$(PRODUCT_NAME) $(PREVIOUS_PRODUCT_VERSION_BASE)"
		productkey=`grep "^ProductKey=$productnameversion" "$1/Contents/MacOS/bootstraprc"`
		if [ ! -z "$productkey" ] ; then
			return 0;
		fi

		# Allow a product family match
		productnameversion="$(PRODUCT_NAME) $(OO_PRODUCT_VERSION_FAMILY)"
		productkey=`grep "^ProductKey=$productnameversion" "$1/Contents/MacOS/bootstraprc"`
		if [ ! -z "$productkey" ] ; then
			return 0;
		fi

		productkey=`grep '^ProductKey=' "$1/Contents/MacOS/bootstraprc" | awk -F= '{ print $2 }'`
		if [ ! -z "$productkey" ] ; then
			last_installed_product_found="$productkey"
		fi
	fi

	return 1

}

update_installation() {

	if [ -z "$1" -o ! -f "$1/Archive.pax.gz" ] ; then
		return 1;
	fi

	check_installation "$2" || return 0

	# Unzip new files
	( cd "$2" || exit 1 ; pax -r -z -p e -f "$1/Archive.pax.gz" ) || return 1

	return 0

}

check_running() {

	check_installation "$1"
	return "$?"

}

